?EXECUTE OBJECT/READER
?COMMON=3
?FILE NEWTAPE = PATCH/PASCAL SERIAL
?DATA CARD
$# PATCH   1 FOR PASCAL.XVI.O CONTAINS 10 CARDS.  CORRECT SPELLING & TABULATION
$: PATCH TO CORRECT SPELLING IN SOME ERROR MESSAGES, CURRECT TABULATION OF CODE
$: OR COMMENTS, AND TO CORRECT THE CALL ON THE PROCEDURE TO GIVE A NEW PAGE.
$: *** NOTE THAT ERROR(71) IS NOW NO LONGER USED - SEE PATCH  513.
$:     IS WAS USED ONCE, BUT INCORRECTLY. ERROR(63) IS CALLED IN ITS PLACE.
$: *** NOTE THAT THE ALGOL CODE FILE "PASCRUN"/"DISK" HAS BEEN RENAMED
$:     "PASCAL"/"PRELUDE".  IT IS NO LONGER REFERENCED DIRECTLY IN THIS COMPILER
$:  NILS A OTTE,   UNIVERISTY OF NATAL, DURBAN.   AUG - NOV 1977.
$:
    BEGIN     ; % NULL                  %***   4) REWRITE               50203000
      GEN("PUT",3,5);                   %***   5) PAGE                  50204000
      GEN("PPAGE",5,3);    %                                            50208000
          BLOCK;                       %*** COMPILE PROCEDURE BODY ***  80646000
    COMPSTAT;                          %*** COMPILE STATEMENT PART ***  80691000
      (" 41  ALFA CONSTANTS MAY NOT BE LONGER THAN 7 CHARACTERS."),     91045000
      (" 55  PROCEDURE NESTING DEPTH + NO OF RECORDS IS TOO GREAT."),   91060000
      (" 87  END-OF-INPUT ENCOUNTERED UNEXPECTEDLY."),                  91094000
      (" 97  TOO MANY FILES IN USE."),                                  91104000
END OF B5700 PASCAL COMPILER.. .........................................99001000
$# PATCH 2 FOR PASCAL CONTAINS 171 CARDS.
$:    PATCH TO MERGE DAG LANGMYHRS PPP10 TO PPP11 COSY PATCHES
$:    WITH NILS OTTES MODIFIED PPP10 SOURCE.
$:    DAVID A COOPER , HERIOT-WATT UNIVERSITY,  JANUARY 1978.
$:
FILE CARD "SOURCE" (1,10,30);                  % SOURCE CODE FILE       10035000
FILE LINES 1 (1,17);                           % PRINT FILE             10036000
FILE PASCALGOL DISK SERIAL [20:600] (1,10,30,SAVE 0); % CODE            10037000
ARRAY PARAMTAB, FORWPARAM1, FORWPARAM2[0:MAXPARAMS];                    10109000
FILE XREFFILE DISK SERIAL [20:3000] (1,3,30);                           10137000
ALPHA ARRAY XBUFF[0:2];                                                 10138500
BOOLEAN XINB;                                                           10138550
INTEGER ARRAY SYMKIND[0:62];            %USED IN ERROR RECOVERY.        10149000
       ERROR100MESS (//"100  ILLEGAL SAVE CONSTANT IN """""S""""" OPTION10188500
  THE VALUE 07 IS SUBSTITUTED"/"     SO THIS ERROR DOES NOT INCREMENT TH10188600
E COMPILATION ERRORS COUNT."//),%                                       10188700
          PACKEDSY=61#,   ASSERTSY=62#;                                 10211000
%                                                                       20181500
%                                                                       20181550
    IF ERRNUM=100                                                       20181600
    THEN NUMERRS:=NUMERRS-1;%    * ERROR NUMBER 100 ALONE SHOULD NOT    20181650
%                                * PREVENT THE XALGOL COMPILATION BEING 20181700
%                                * ZIPPED AS THE VALUE 7 IS SUBSTITUTED 20181750
%                                * FOR A BAD SAVE CONSTANT IN AN "S"    20181800
%                                * OPTION.                              20181850
%                                                                       20181900
%                                                                       20181950
      7(INITIAL),MIDDLE,INITIAL;                                        20308000
           "400READ", "6READLN", "50RESET", "6UNPACK", "50WRITE",       20373000
           "6QQJZXL" DO                                                 20373500
    IF DECL THEN AX := -AX;                                             20520000
    ABS(A[2]) LEQ ABS(B[2]);                                            20539000
%                                                                       20541100
%                                                                       20541150
%                                                                       20541200
BOOLEAN PROCEDURE XREFINPUT(A);                                         20541250
ARRAY A[0];                                                             20541300
BEGIN                                                                   20541350
    LABEL EOF;                                                          20541400
    INTEGER I;                                                          20541450
%                                                                       20541500
    READ(XREFFILE,3,XBUFF[*])[EOF];                                     20541550
    FOR I:=0,1,2 DO                                                     20541600
     A[I] := XBUFF[I];                                                  20541650
    IF FALSE THEN EOF: BEGIN                                            20541700
                           CLOSE(XREFFILE,RELEASE);                     20541750
                           XINB := TRUE;                                20541800
                       END;                                             20541850
    XREFINPUT := XINB;                                                  20541900
%                                                                       20541950
END OF XREFINPUT;                                                       20541960
        A2 := -A2;                                                      20570000
BOOLEAN LPARFOUND,SAVEXREFOPT;                                          20842000
    SAVEXREFOPT := XREFOPTION;   XREFOPTION := FALSE;                   20847500
              IF SAVEXREFOPT THEN NEWXREF(CURNAME1,CURNAME2,THISLEVEL,  20861500
                                         FALSE);                        20861550
    XREFOPTION := SAVEXREFOPT;                                          20868500
%        ASSERT            62       ASSERTSY            INITIAL         30075500
                 IF CURNAME1="6ASSERT" THEN ASSERTSY ELSE               30165500
              END%                                                      30280000
%                                                                       30280025
%                                                                       30280050
% THE FOLLOWING    LINES DECODE ANY OCCURRENCE OF THE "S" OPTION AND    30280075
% SETS THE GLOBAL INTEGER VARIABLE "SAVEFACTOR" WHICH CONTROLS THE      30280100
% TYPE OF COMPILATION INITIATED BY THE ZIP. THERE ARE THREE LEGAL FORMS 30280125
% OF THE "S" OPTION AS FOLLOWS.-                                        30280150
%                                                                       30280175
%         "S-"  WILL GIVE NO ZIP IE. PASCAL SYNTAX CHECK ONLY           30280200
%         "S+"  WILL GIVE A ZIP FOR COMPILE AND GO                      30280225
%         "S??" WILL GIVE A ZIP FOR COMPILE TO LIBRARY                  30280250
%               WHERE ?? IS THE TWO DIGIT DECIMAL SAVE                  30280275
%               CONSTANT GIVEN THE OBJECT CODE FILE                     30280300
%               NB. IF THE SAVE CONSTANT IS TO BE                       30280325
%                   LESS THAN 10 THE FIRST DIGIT                        30280350
%                   MUST BE INCLUDED IE. A "0".                         30280375
%                                                                       30280400
%                                                                       30280425
             ELSE                                                       30280450
             IF CX="S" THEN                                             30280475
             BEGIN                                                      30280500
                 IF C="-" THEN SAVEFACTOR:=-1 ELSE                      30280525
                 IF C="+" THEN SAVEFACTOR:= 0 ELSE                      30280550
                 IF C LEQ 9 THEN                                        30280575
                 BEGIN                                                  30280600
                     SAVEFACTOR := 10 | C;   NEXTCHAR;                  30280625
                     SAVEFACTOR := SAVEFACTOR + C;                      30280650
                     IF C GTR 9 THEN ERROR(100);                        30280675
                 END                                                    30280700
                 ELSE                                                   30280720
                 BEGIN                                                  30280735
                     ERROR(100);                                        30280750
                     SAVEFACTOR := 7;                                   30280765
                 END;                                                   30280780
             END;                                                       30280800
%                                                                       30280825
%                                                                       30280850
%                                                                       30280875
INTEGER EXPRLEVEL,TX,EXPINVARCNT;%                                      40018000
    BOOLEAN INBRACKET,INRECORD,SIMPLEVAR;                               40087000
      SIMPLEVAR := FALSE;                                               40099000
    CURTYPE := THISID.TYPE;   SIMPLEVAR := TRUE;                        40104000
      SIMPLEVAR := FALSE;                                               40109000
            EXPINVARCNT:=EXPINVARCNT+1;%                                40120500
            EXPINVARCNT:=EXPINVARCNT-1;%                                40121500
    SIMPLEVARIABLE := SIMPLEVAR;                                        40199500
      IF EXPINVARCNT=0 THEN WRITEEXPR; %                                40751000
    LABEL EFH;                                                          50201500
                                     %*** 6) OPEN & CLOSE (INPUT) FOR   50204500
                                           % CUMULATIVE FREQUENCY COUNT 50204550
      BEGIN                                                             50208100
          GEN("QQJZXL",6,2);                                            50208200
          INSYMBOL;                                                     50208300
          GO TO EFH; %                                                  50208400
      END;                                                              50208500
 EFH:                                                                   50219500
     EXPRLEVEL := 1;                                                    60346500
           IF THISID.IDCLASS=VAR OR                                     60354000
              THISID.IDCLASS=CONST AND BOOLEAN(THISID.FORMAL) THEN %    60354500
     EXPRLEVEL := 0;                                                    60383500
PROCEDURE ASSERTSTAT;                                                   60391100
BEGIN                                                                   60391200
    GEN("IF NOT(",7,1);                                                 60391400
    INSYMBOL;   BOOLEXPR;                                               60391500
    GEN(") THEN",7,2);   GEN("RUNERR(",7,1);   GEN("7,",2,6);           60391600
    GENINT(CARDCNT);     GEN(";",1,7);                                  60391700
END OF ASSERTSTAT;                                                      60391800
            IF CURNAME1="6QQJZXL" THEN FILEHANDLING(6)   ELSE           60443500
    IF CURSY=ASSERTSY THEN ASSERTSTAT ELSE                              60457500
            IF PARAM THEN GEN("0",1,7) ELSE BEGIN                       80129000
                                                GEN("0:",2,6);          80129100
                                                GENINT(RECSIZE-1);      80129200
                                            END                         80129300
            FORWPARAM1[NUMPARAMS] := CURNAME1;                          80177500
            FORWPARAM2[NUMPARAMS] := CURNAME2;                          80177600
    INTEGER INDEX, CTYPE, NUMFORWARDS, T, TX, I;                        80403000
    ALPHA T3;                                                           80403500
        LABEL LL1; %                                                    80447010
        LABEL LL2; %                                                    80496010
        LABEL LL3; %                                                    80542010
        IF CURLEVEL GEQ MAXTABLES THEN ERROR(101) ELSE                  80543500
            BLOCKTAB[CURLEVEL+1] := NUMBLOCKS := NUMBLOCKS + 1;         80543600
              NAMETAB3[CURLEVEL,THISINDEX].FORWARDDEF := 0;             80553000
              T := NAMETAB3[CURLEVEL,THISINDEX].INFO;                   80554500
              TX := T + PARAMTAB[T];                                    80554600
              FOR I:=T+1 STEP 1 UNTIL TX DO                             80554700
              NEWNAME(FORWPARAM1[I],FORWPARAM2[I],CURLEVEL+1);          80554800
          REPLACE POINTER(NAMETAB1[CURLEVEL+1,*]) BY 0                  80637500
                  FOR MAXNAMES+1 WORDS;                                 80637600
          IF CURLEVEL GEQ LASTREC THEN ERROR(101); %                    80643000
%                                                                       90014100
%                                                                       90014200
SAVEFACTOR:=0;%   * DEFAULT ZIP IS COMPILE AND GO UNLESS                90014300
%                 * CHANGED BY THE USE OF THE "S" OPTION                90014400
%                                                                       90014500
%                                                                       90014600
%                                                                       90042100
% THE FOLLOWING    LINES ADD A "0" ONTO THE FRONT OF THE PROGRAM NAME OR90042200
% THE FIRST SIX CHARACTERS THEREOF IF IT IS LONGER THAN SIX CHARACTERS  90042300
% THUS GIVING THE NAME OF THE XALGOL OBJECT CODE FILE PRODUCED.         90042400
%                                                                       90042500
    PROGNAME := CURNAME1.[35:36];  PROGNAMELENGTH := MIN(6,CURLENGTH)+1;90042600
%                                                                       90042700
%                                                                       90042800
BEGIN%                                                                  90090400
     WRITE(LINE ,NOERRORS);%                                            90090500
     IF ERR[100]%                                                       90090600
     THEN WRITE(LINE ,ERROR100MESS);%                                   90090700
     IF SAVEFACTOR}0 THEN%   *A ZIP IS REQUIRED                         90090800
%VOIDT                                                                  90111000
END%                                                                    90129500
     ("100  ILLEGAL SAVE CONSTANT IN """""S""""" OPTION. THE VALUE 07 IS91106500
SUBSTITUTED"/"     SO THIS ERROR DOES NOT INCREMENT THE COMPILATION ERRO91106600
RS COUNT."),%                                                           91106700
  ("101  PROCEDURES/FUNCTIONS NESTED TOO DEEP."),                       91106800
    REWIND(XREFFILE);                                                   92003500
    SORT(PRINTXREF,XREFINPUT,0,XREFMAX,XREFCOMPARE,3,1000,6000);        92005000
$# PATCH 500 FOR PASCAL.XVI.O CONTAINS  5 CARDS.  PRT CELLS 25 TO 30
$: THIS PATCH CORRECTS THE DOCUMENTATION FOR THE COMPILERS PRT CELLS 25 TO 27
$: (NOT 21 TO 23). FURTHERMORE. IT USES PRT CELL 30 FOR THE CARD COUNT (IN PLACE
$: OF 27) TO BE CONSISTANT WITH THE OTHER SYSTEM COMPILERS. PRT CELLS 27 IS USED
$: FOR THE PAGE COUNT FORMERLY AT SEQUENCE 10134000.
$:  NILS OTTE,     UNIVERISTY OF NATAL, DURBAN.   AUG - NOV 1977.
$:
INTEGER NUMERRS,        % @R+25: NUMBER OF ERRORS IN PROGRAM.           10029000
        SAVEFACTOR,     % @R+26: SAVEFACTOR FOR CODE FILE.              10030000
        PAGECNT,        % @R+27: NUMBER OF PAGES PRINTED.               10033800
        CARDCNT;        % @R+30: NUMBER OF CARDS READ.                  10034000
  INTEGER  LINECNT, ERRINX;  % PAGECNT @ PRT+27                         10134000
$# PATCH 501 FOR PASCAL.XVI.O CONTAINS 3 CARDS.  "PRT25" FOR USER-S PASCAL PROG.
$: THIS PATCH INCORPORATES THE PRE-DEFINED IDENTIFIER "PRT25" LOCATED
$: AT PRT CELL 25 AS PER DOCUMENTATION. (THE DOCUMENTATION MUST BE
$: AMENDED TO DELETE PRT26 AND PRT27 FROM THE PRE-DEFINED IDENTIFIER LIST.)
$: ** NOTE THAT FILE  PASCAL/PRELUDE  MUST BE UPDATED FOR "PRT25".
$: THE VARIABLE "PRT25" MAY BE SET BY THE  Q COMMON = N CONTROL CARD.
$:  NILS A OTTE,   UNIVERSITY OF NATAL, DURBAN.    AUG - NOV 1977.
$:
    NEWNAME("50PRT25",0,0);                       %*** "PRT25" ***      20369100
    T3:=INTTYPE;  T3.IDCLASS:=VAR;     % GLOBAL INTEGER VARIABLE        20369200
    NAMETAB3[0,THISINDEX] := T3;                                        20369300
$# PATCH 502 FOR PASCAL.XVI.O CONTAINS 3 CARDS.   LINE COUNT WHEN DEBUGGING
$: TO CORRECT THE LINE COUNT WHEN THE DEBUGGING OPTION TO LIST THE ALGOL
$: CODE GENERATED IS SET (*$D+ *), OTHERWISE LINES PER PAGE GOES WRONG.
$:  NILS A OTTE,   UNIVERSITY OF NATAL, DURBAN.    AUG - NOV 1977.
$:
DEFINE LINESPERPAGE = 60 #,                                             10038000
  IF DUMPOPTION THEN BEGIN  IF (LINECNT:=LINECNT+1)}LINESPERPAGE        20149000
       THEN HEADING;  WRITE(LINE,10,ALGOLCARD[*])   END;                20149100
$# PATCH 503 FOR PASCAL.XVI.O CONTAINS  9 CARDS.  INTEGER TO REAL FOR TYPETAB1
$: WHEN MORE THAN 63 ENTRIES WERE ENTERED IN THE "TYPETAB*" ARRAYS, THE
$: PASCAL COMPILER WAS DISCONTINUED DUE TO INTEGER OVERFLOW, WHICH COULD OCCUR
$: IN A NUMBER OF PROCEDURES AS A RESULT OF ASSIGNING TO AN INTEGER AN ARRAY
$: ELEMENT WHOSE EXPONENT FIELD WAS NOT ZERO.  THE FIELD "ARRTYPE" IS
$: [43:10] AND HAS THE 4 HIGH ORDER BITS IN THE EXPONENT FIELD.  THIS PATCH
$: ALTERS THE DECLARATIONS OF ALL IDENTIFIER TO WHICH "TYPETAB1" MAY BE
$: ASSIGNED FROM INTEGER TO REAL TO CORRECT THIS ERROR.
$:  NILS A OTTE,   UNIVERSITY OF NATAL, DURBAN.    AUG - NOV 1977.
    INTEGER  IT;   REAL  T;                                             50225000
    INTEGER  IT;   REAL  T;                                             50285000
    INTEGER CASETYPE,ADDR,MAXADDR,INDEX,CTYPE,TX,SX, T3,LLIM,ULIM,I;    70244000
    REAL T1, CVAL;                                                      70246000
    INTEGER LEVEL1000, TYP, NAM, NAMTAB, I, J, RECSIZE;                 80020000
    ALPHA  T1, FNAME;                                                   80022000
    INTEGER FIRSTPARAM, CURKIND, P1, PX, I, T3;  REAL T;                80148000
    INTEGER  INDEX, CTYPE, NUMFORWARDS, T3, TX, I;                      80403000
    REAL  T, CVAL;                                                      80404000
$# PATCH 504 FOR PASCAL.XVI.O CONTAINS 23 CARDS.  IMPLEMENT FORWARD DECLARATIONS
$: FORWARD DECLARATIONS OF PROCEDURES ENDED IN CHAOS DUE TO THE PARAMETERS AND
$: THEIR TYPES NOT BEING KEPT, RESULTING IN GLOBALS BEING REFERENCED WHERE
$: POSSIBLE, AND FORWARD DECLARATIONS OF FUNCTIONS DID NOT WORK AT ALL.
$: THE PROBLEM WAS THAT THE INFORMATION ON THE PARAMETERS WAS BEING STORED
$: IN THE "NAMETAB*" ROWS FOR THE CURRENT LEVEL, WHICH WERE BEING SET TO ZERO
$: ON EXIT FROM PROCEDURE BLOCKS AT THAT LEVEL THEREAFTER.
$: THIS PATCH CORRECTS THE ERROR BY MARKING THE ENTRIES FOR PARAMETERS OF
$: FORWARD PROCEDURES AND FUNCTIONS, SETTING TO ZERO ONLY THOSE ELEMENTS WHICH
$: ARE NOT SO MARKED ON EXIT FROM A BLOCK, AND UNMARKING THE RELEVANT PARAMETERS
$: WHEN THE PROCEDURE OR FUNCTION IS DEFINED.  THE MARKING OF THE PARAMETERS
$: IS DONE IN SUCH A WAY THAT THE SAME IDENTIFIER NAME MAY BE USED AT THE SAME
$: LEVEL WITHOUT SYNTAX ERROR X TO REPORT THAT THE IDENTIFIER IS ALREADY DEFINED
$: THE UNMARKING REPLACES THE IDENTIFIER NAME IN "NAMETAB*" TO ALLOW FOR THE
$: SAME NAME OR ONE THAT HASHES TO THE SAME PLACE TO HAVE BEEN USED PREVIOUSLY
$: AND NOW DELETED.
$:  NILS A OTTE,   UNIVERSITY OF NATAL, DURBAN.    AUG - NOV 1977.
          IF FOUND AND THISID.IDCLASS}FUNC THEN                         80548000
              NAMETAB3[CURLEVEL,THISINDEX].FORWARDDEF:=0;               80553000
                (THISID.IDCLASS=FUNC AND NOT FUN)  THEN ERROR(43);      80555100
              TX:=(T:=THISID.INFO)+PARAMTAB[T];  % UNMARK FORWARD PARMS 80556000
              FOR I:=T+1 STEP 1 UNTIL TX DO      %  TO ALLOW REFERENCE  80557000
              BEGIN  T3:=PARAMTAB[I].PARAMNAME;                         80558000
                CURNAME1:=ABS(NAMETAB1[CURLEVEL+1,T3]);                 80559000
                CURNAME2:=    NAMETAB1[CURLEVEL+1,T3];                  80560000
                NAMETAB1[CURLEVEL+1,T3]:=0;                             80561000
                NEWNAME(CURNAME1,CURNAME2,CURLEVEL+1);                  80562000
                IF T3!THISINDEX THEN BEGIN                              80563000
                   PARAMTAB[I].PARAMNAME:=THISINDEX;                    80564000
                   NAMETAB3[CURLEVEL+1,THISINDEX] :=                    80565000
                   NAMETAB3[CURLEVEL+1,T3];                             80565010
             END   END; % OF UNMARKING FORWARD PARAMETERS.              80566000
         TX:=(T:=NAMETAB3[CURLEVEL,INDEX].INFO)+PARAMTAB[T];            80636100
         FOR I:=T+1 STEP 1 UNTIL TX DO     % MARK FORWARD PARAMETERS    80636200
             NAMETAB1[CURLEVEL+1,PARAMTAB[I].PARAMNAME].[46:1] := 1;    80636210
         TX:=CURFUNC;   CURFUNC:=IF FUN THEN INDEX ELSE -1;             80645000
         FOR I:=0 STEP 1 UNTIL MAXNAMES DO % LEAVE FORWARD PARAMETERS   80647000
             IF NAMETAB1[CURLEVEL,I]>0 THEN NAMETAB1[CURLEVEL,I]:=0;    80648000
         CURLEVEL:=CURLEVEL-1;  CURFUNC:=TX;                            80649000
   FOR I:=LASTREC STEP 1 UNTIL TOPREC-1 DO % CLEAR RECORD DECS          80693000
$# PATCH 505 FOR PASCAL.XVI.O CONTAINS  9 CARDS.  CHECK FOR HASH TABLE FULL
$: WHEN THER ARE "MAXNAMES" IDENTIFIERS AT ONE LEVEL, THE "NAMETAB*" ROWS
$: BECOME FULL AND THIS USED TO PUT THE COMPILER INTO AN INFINITE LOOP,
$: EITHER IN "NEWNAME" OR "SEARCHTAB".  THIS PATCH INSERTS TEST FOR WRAP AROUND
$: LEADING BACK TO THE HASHED STARTING POINT, FOR WHICH IT GIVES SYNTAX ERROR
$: 40, TOO MANY IDENTIFIERS DECLARED.
$:  NILS A OTTE,   UNIVERSITY OF NATAL, DURBAN.    AUG - NOV 1977.
DEFINE  HASH(HASH1) = ENTIER((HASH1) MOD MAXNAMES) #;                   20202000
BEGIN  ALPHA TNAME;  INTEGER WRAPAROUND;                                20209000
      WRAPAROUND:=THISINDEX:=HASH(CURNAME1);                            20210000
        IF THISINDEX=WRAPAROUND THEN TNAME:=0;  % TABLE IS FULL         20216100
    ALPHA TNAME;  INTEGER WRAPAROUND;                                   20237100
      WRAPAROUND:=THISINDEX:=HASH(NAME1);                               20238000
        IF THISINDEX=WRAPAROUND THEN   % TABLE AT THIS LEVEL IS FULL    20244100
           BEGIN ERROR(40); NAME1:=TNAME; NAME2:=NAMETAB2[TAB,THISINDEX]20244200
           END;                                                         20244300
$# PATCH 506 FOR PASCAL.XVI.O CONTAINS  2 CARDS.  RESERVED WORD ENDING AT CC 80
$: IF A RESERVED WORD ENDED AT CARD COLUMN 79 OR 80 AND IF THE "BOLDFACE" FOR
$: RESERVED WORDS OPTION IS SET (*$R+ *), AN INVALID INDEX OCCURRED IN THE
$: SCANNER "INSYMBOL".  THE PROBLEM IS CURED BY CORRECTLY COMPUTING THE STARTING
$: AND ENDING POINT OF THE RESERVED WORDS.
$:  NILS A OTTE,   UNIVERSITY OF NATAL, DURBAN.    AUG - NOV 1977.
        BEGIN T1 := CARDLENGTH-CHARCNT-CURLENGTH-1;                     30178000
                      FOR CURLENGTH+REAL(CHARCNT=0);                    30181000
$# PATCH 507 FOR PASCAL.XVI.O CONTAINS  5 CARDS.  "VARIABLE", "SIMPLEVARIABLE"
$: IN PROCEDURE "VARIABLE", "SIMPLEVARIABLE" IS SET TRUE IF A SUBSCRIPT IS
$: SIMPLE, RESULTING IN ALGOL CODE BEING WRITTEN PREMATURELY DURING RECURSIVE
$: CALLS ON PROCEDURE "EXPRESSION", WHICH IN SOME CASES LEAD TO ALGOL SYNTAX
$: ERRORS.  SINCE WRITING THE ALGOL CODE IS DEPENDANT ON "EXPRLEVEL" BEING ZERO,
$: THIS PATCH BUMPS ITS VALUE PRIOR TO ANALYSING THE SUBSCRIPT, AND SETS
$: "SIMPLEVARIABLE" FALSE AFTERWARDS.
$:  NILS A OTTE,   UNIVERSITY OF NATAL, DURBAN.    AUG - NOV 1977.
$:
            EXPRLEVEL := EXPRLEVEL+1;  % DO NOT "WRITEEXPR" YET         40120900
            EXPRLEVEL := EXPRLEVEL-1;                                   40121100
            SIMPLEVARIABLE := FALSE;   % RECURSION ON "VARIABLE"        40121200
              EXPRLEVEL := EXPRLEVEL+1;                                 60063900
              EXPRLEVEL := EXPRLEVEL-1;                                 60065100
$# PATCH 509 FOR PASCAL.XVI.O CONTAINS  1 CARD.  "CONCAT" A FUNCTION OF ANY TYPE
$: THE INTRINSIC FUNCTION "CONCAT" COULD ONLY BE ASSIGNED TO A VARIABLE DECLARED
$: "REAL" TO AVOID TYPE CONFLICT SYNTAX ERRORS.  THIS PATCH MAKES "CONCAT"
$: TYPELESS.
$:  NILS A OTTE,   UNIVERSITY OF NATAL, DURBAN.    AUG - NOV 1977.
$:
    CURTYPE := 0;  % ALFATYPE OR REALTYPE                               50050000
$# PATCH 511 FOR PASCAL.XVI.O CONTAINS  7 CARDS.  ALLOW UP-LEVEL ADDRESSING
$: TO ALLOW UP-LEVEL IDENTIFIER REFERENCES.  FORMERLY, REFERENCES TO GLOBAL
$: IDENTIFIERS WHICH WERE NOT IN THE OUTER BLOCK WERE FLAGGED BY SYNTAX ERROR
$: 5, UP-LEVEL ADDRESSING NOT IMPLEMENTED DUE TO HARDWARE RESTRICTION.
$: ALTHOUGH THE RESTRICTION EXISTS IN EXTENDED ALGOL, IT IS NOT TRUE THAT THE
$: RESTRICTION IS DUE TO HARDWARE, FOR UP-LEVEL ADDRESSING IS ALLOWED IN
$: COMPATIBLE ALGOL WITH THE CAUTION THAT IT IS INEFFICIENT (THE IMPLEMENTATION
$: IS SIMILAR TO AN ARRAY ELEMENT REFERENCE).
$: THIS PATCH PERMITS SUCH GOBAL REFERENCES, EXCEPT
$: (1) THAT IF THE CONTROL VARIABLE OF A FOR STATEMENT IS NOT LOCAL OR IN THE
$:     OUTER BLOCK (PTR) A WARNING IS ISSUED (IN THE FORM OF A SYNTAX ERROR,
$:     BUT THE ERROR COUNT IS NOT INCREMENTED), AND
$: (2) THE RESTRICTION IS STILL APPLIED TO FUNCTION NAMES.  THE MESSAGE FOR
$:     SYNTAX ERROR IS AMENDED ACCORDINGLY.
$:  NILS A OTTE,   UNIVERSITY OF NATAL, DURBAN.    AUG - NOV 1977.
$:
    IF ERRNUM<0 THEN ERRNUM:=ABS(ERRNUM) ELSE                           20180900
$  %IF THISLEVEL>1 AND THISLEVEL<CURLEVEL THEN ERROR5;                  40103000
$            %IF THISLEVEL>1 ND THISLEVEL!CURLEVEL THEN ERROR5;         50244000
$              %IF THISLEVEL.1 AND THISLEVEL!CURLEVEL THEN ERROR5;      50306000
        IF THISLEVEL!CURLEVEL-1 OR THISINDEX!CURFUNC THEN ERROR(5);     60091000
          IF THISLEVEL>1 AND THISLEVEL<CURLEVEL THEN ERROR(-5);         60276000
      ("  5  FUNCTION NAME NOT ACCESSIBLE AT THIS LEVEL."),             91009000
$# PATCH 512 FOR PASCAL.XVI.O CONTAINS 24 CARDS. IMPLEMENT STRUCTURED ASSIGNMENT
$: TO ALLOW STRUCTURED ASSIGNMENT.  FORMERLY, AN ASSIGNMENT OF A STRUCTURE
$: WAS NOT IMPLEMENTED, EG  A, B: RECORD ... END;  A := B;
$: THIS PATCH ATTEMPTS TO IMPLEMENT ASSIGNMENT OF STRUCTURES OF ANY KIND,
$: BUT IT WOULD FAIL IF THE STRUCTURE WERE TRANSLATED INTO A MULTI-DIMENSIONAL
$: ALGOL ARRAY.    THIS IMPLEMENTATION DOES WORK FOR ARRAYS, RECORDS,
$: SUBSTRUCTURES, AND FOR STRUCTURES ALLOCATED IN THE HEAP.
$: THIS PATCH NEEDS PATH 507 IN ORDER TO SUCCEED.
$: FOR THIS IMPLEMENTATION, THE FOLLOWING DEFINE IS REQUIRED IN THE FILE
$: PASCAL/PRELUDE:  DEFINE ASSIGN(DEST, SOURCE, LENGTH) = REPLACE POINTER(DEST)
$: BY POINTER(SOURCE) FOR LENGTH WORDS #;
$:  NILS A OTTE,   UNIVERSITY OF NATAL, DURBAN.    AUG - NOV 1977.
$:
                                                                        60020000
    PROCEDURE WRITESEXPR;    %*** FIX STRUCTURE FOR ASSIGNMENT          60021000
    BEGIN                    %    USED ONLY IN ASSIGNMENT OF STRUCTURES 60022000
      IF INSIDEBRACKETS THEN  IF SYMTAB[NUMSYMS] = "100000,"            60023000
         THEN SYMTAB[NUMSYMS] := ", 0 ] " ELSE PUTSYM("]");             60024000
      WHILE NUMPOINTERS>0 DO                                            60025000
         BEGIN  NUMPOINTERS := NUMPOINTERS-1;                           60026000
         IF NUMSYMS+4 } MAXSYMS THEN  WRITEEXPR;                        60027000
         REPLACE POINTER(SYMTAB[NUMSYMS+1]) BY                          60028000
              "00-1)DIV00 1022,00 T MOD00 1022]";                       60029000
         NUMSYMS := NUMSYMS+4;                                          60030000
         END; % OF WHILE                                                60031000
      WRITEEXPR;  GEN( ",", 1,7 );                                      60032000
    END  WRITESEXPR;                                                    60033000
                                                                        60034000
          %ERROR(95);  % STRUCTURED ASSIGNEMENT NOT IMPLEMENTED.        60063000
          GEN("ASSIGN(",7,1);  WRITESEXPR;                              60064000
          EXPRESSION;          WRITESEXPR;                              60065000
          GENINT(TYPETAB1[LEFTTYPE].SIZE);          GEN(")",1,7);       60066000
          IF TYPETAB1[LEFTTYPE].SIZE!TYPETAB1[CURTYPE].SIZE             60067000
              THEN ERROR(95);                                           60068000
        END;                                                            60087000
        CHECKTYPES( LEFTTYPE, CURTYPE );                                60088000
      (" 95  SIZE OF STRUCTURES IN ASSIGNMENT ARE NOT THE SAME."),      91102000
$# PATCH 513 FOR PASCAL.XVI.O CONTAINS 16 CARDS.  FIX POINTERS VIA POINTERS
$: TO CORRECT THE CODE GENERATED FOR CHAINED REFERENCES THROUGH THE HEAP,
$: IE FOR POINTERS TO POINTERS.  THE OFFSET FOR COMPONENTS WITHIN RECORDS
$: WAS INCORRECTLY BEING ADDED TO THE RECORD IN THE LEFTMOST REFERENCE, IE THE
$: INNERMOST, INSTEAD OF AT THE EXPECTED LEVEL.
$: FOR EXAMPLE, THE FOLLOWING TWO REFERENCES WOULD BOTH BE TRANSLATED TO
$: THE SAME ALGOL CODE EQUIVALENT TO  HEAP[HEAP[ID+IPART+ICOMP]];
$:  ID@.PART@.COMP,    ID@.PART.COMP@,
$: WHEN THE FIRST SHOULD HAVE BEEN:   HEAP[HEAP[ID+IPART]+ICOMP].
$: IN ADDITION, THIS PATCH IMPROVES THE COMPILERS CODE FOR GENERATING THE
$: "MEM" ARRAY SUBSCRIPT.
$:  NILS A OTTE,  UNIVERSITY OF NATAL, DURBAN.   1977-11-14
$:
            IF NUMSYMS+6 { MAXSYMS THEN                                 40175000
              NUMSYMS := NUMSYMS+2;                                     40180400
              IF NUMPOINTERS > 0      % POINTER VIA POINTER             40180500
              THEN BEGIN  REPLACE POINTER(SYMTAB[NUMSYMS+1]) BY         40180600
                   "00-1)DIV00 1022,00 T MOD00 1022]";                  40180700
                   NUMSYMS := NUMSYMS+4;                                40180800
                   END                                                  40180900
              ELSE  NUMPOINTERS := 1;                                   40181000
      % INBRACKET := FALSE;                                             40191100
        BEGIN NUMPOINTERS := NUMPOINTERS-1;                             40193000
              IF NUMSYMS+4 { MAXSYMS                                    40194000
              THEN BEGIN  REPLACE POINTER(SYMTAB[NUMSYMS+1]) BY         40194100
                   "00-1)DIV00 1022,00 T MOD00 1022]";                  40194200
                   NUMSYMS := NUMSYMS+4;                                40194308
                   END                                                  40194400
              ELSE ERROR(63);  % EXPRESSION IS TOO LONG FOR SYMTAB[*]   40195000
$# PATCH 514 FOR PASCAL.XVI.O CONTAINS  2 CARDS.  PROCESS TIME FUNCTION FOR RUN
$: PATCH TO CHANGE THE NAME OF THE FUNCTION ON THE B5700 VERSION WHICH SUPPLIES
$: THE PROCESS TIME USED BY THE PASCAL PROGRAM ON THE CURRENT RUN FROM "ELAPSED"
$: WHICH MEANS PLATFORM TIME, TO "CPUTIME" WHICH IS THE WIDELY ACCEPTED TERM
$: FOR THIS QUANTITY.
$:  NILS A OTTE,   UNIVERSITY OF NATAL, DURBAN.    AUG - NOV 1977.
$:
   NEWNAME("7CPUTIM","E",0);  NAMETAB3[0,THISINDEX]:=T3;                20390000
           IF CURNAME1="7CPUTIM" AND CURNAME2="E" THEN    % "CPUTIME"   40452000
$# PATCH 516 FOR PASCAL.XVI.O CONTAINS  2 CARDS.  CORRECT "NO LISTING" ERROR
$: THIS PATCH CORRECTS AN ERROR WHEREBY IF LISTING WAS TURNED OFF
$: AND PAGE THROW WAS INVOKED, A HEADING WAS  PRINTED REGARDLESS.
$: DAVID A COOPER, HERIOT-WATT UNIVERSITY.....JUNE, 1978
$:
              IF CX="L" THEN IF C=1 THEN                                30264000
                 IF LISTOPTION THEN HEADING ELSE                        30264500
$# PATCH 517 FOR PASCAL.XVI.O CONTAINS  2 CARDS.
$: THIS PATCH CORRECTS AN ERROR THAT CAUSED A FILE DECLARATION
$: TO HAVE ITS NAME STRING SPLIT OVER TWO LINES IN THE GENERATED XALGOL.
$:   ALSO CHANGES SYMTAB FROM TYPE REAL TO TYPE ALPHA.
$: DAVID A COOPER, HERIOT-WATT UNIVERSITY.....JUNE, 1978
$:
ALPHA ARRAY SYMTAB[0:MAXSYMS];     % USED BY "EXPRESSION".              10144000
             IF ALGOLCNT LSS 14 THEN WRITEALGOL;                        80103000
$# PATCH 518 FOR PASCAL.XVI.O. CONTAINS 224 CARDS.
$: THIS PATCH CHANGES THE WAY THAT MULTI-DIMENSION ARRAYS
$: REPRESENTING RECORDS ARE DECLARED. PREVIOSLY THEY WRE DECLARED
$: THE WRONG WAY ROUND FOR XALGOL. THIS PATCH SORTS THE DIMENSIONS
$: INTO ASCENDING ORDER FORM LEFT TO RIGHT AND GENERATES APPROPRIATE
$: DEFINES AND CODE FOR HANDLING THE ARRAYS.
$: STUART ANDERSON, COMPUTER SCIENCE, HERIOT-WATT UNIVERSITY, JUNE.....1978.
$:
     DEFINE                                                             10156200
          PERMSUB = 0 #, MAXTOTALSUBSCRS = 100#,                        10156300
          ARRNAM  = 1 #;                                                10156400
     ARRAY   ARRSUBPERMTAB[0:1,0:MAXTOTALSUBSCRS];                      10156500
     INTEGER    PASSPERMTAB, MAXPERMTAB, REMEMBERPOSN;                  10156600
$                                                                       40080000
     BOOLEAN SIMPLEVARIABLE,INSIDEBRACKETS,INSIDEPARENS;                40080100
$                                                                       40105000
     IF INSIDEPARENS AND TYPETAB1[CURTYPE].STRUCT > 0  AND              40105100
                         TYPETAB1[CURTYPE].FORM < FILES THEN            40105200
        PUTID("H",1000|THISLEVEL+THISINDEX,5)                           40105300
     ELSE                                                               40105400
        PUTID("V",1000|THISLEVEL+THISINDEX,5);                          40105500
     INSIDEPARENS := TRUE;                                              40258100
     INSIDEPARENS := FALSE;                                             40259100
$                                                                       50243000
              GENID("H",1000|THISLEVEL+THISINDEX,5);                    50243100
$                                                                       50307000
              GENID("H",1000|THISLEVEL+THISINDEX,5);                    50307100
$SET VOIDT                                                              80052000
$POP VOIDT                                                              80064000
     DEFINE                                                             80064005
           LOWSUBS = 0 #,                                               80064010
           HISUBS  = 1 #,                                               80064015
           NEXTSUBS= 2 #,                                               80064020
           MAXNOOFSUBSCRIPTS = 20 #,                                    80064025
           STOPPERSUBTAB = 21 #;                                        80064030
     ARRAY  ARRSUBSCRIPTRANGE[0:2,0:MAXNOOFSUBSCRIPTS];                 80064035
     INTEGER  FIRSTRANGE, NEXTFREEENTRY, PASSSUBRANGE, PREVPASS,        80064040
              MP, POSNO, SUBDIFF;                                       80064045
     IF  ARRAYVAR  THEN  GEN(";",1,7) ELSE  ARRAYVAR := TRUE;           80064050
     IF  NOT PARAM THEN                                                 80064055
     BEGIN                                                              80064060
         GEN("DEFINE",7,2);                                             80064065
         GENID("V",LEVEL1000+NAM,5);                                    80064070
         GEN("[",1,7);                                                  80064075
     END;                                                               80064080
     FIRSTRANGE := STOPPERSUBTAB; NEXTFREEENTRY := 0;                   80064085
     POSNO := 1;                                                        80064090
     MP := 10; FIRSTDIM := TRUE;                                        80064095
     DO                                                                 80064100
     BEGIN                                                              80064105
         IF FIRSTDIM THEN FIRSTDIM := FALSE ELSE                        80064110
         BEGIN                                                          80064111
         IF NOT PARAM THEN GEN(",",1,7);                                80064112
         END;                                                           80064113
         IF NOT PARAM THEN  GENID("V",(LEVEL1000+NAM)|MP+POSNO,IF MP=10 80064115
         THEN 6 ELSE 7);  POSNO := POSNO + 1;                           80064120
         IF  POSNO = MP THEN  MP := MP|10;                              80064125
         IF  NEXTFREEENTRY = STOPPERSUBTAB THEN                         80064130
         BEGIN                                                          80064135
             ERROR(0);                                                  80064140
         END                                                            80064145
         ELSE                                                           80064150
         BEGIN                                                          80064155
              ARRSUBSCRIPTRANGE[LOWSUBS,NEXTFREEENTRY]:=TYPETAB2[TYP];  80064160
             ARRSUBSCRIPTRANGE[HISUBS,NEXTFREEENTRY] := TYPETAB3[TYP];  80064165
         END;                                                           80064170
         SUBDIFF := TYPETAB3[TYP] - TYPETAB2[TYP];                      80064175
         IF FIRSTRANGE = STOPPERSUBTAB THEN                             80064180
         BEGIN                                                          80064185
             FIRSTRANGE := NEXTFREEENTRY;                               80064190
             NEXTFREEENTRY := NEXTFREEENTRY + 1;                        80064195
             ARRSUBSCRIPTRANGE[NEXTSUBS,FIRSTRANGE] := STOPPERSUBTAB;   80064200
         END                                                            80064205
         ELSE                                                           80064210
         BEGIN                                                          80064215
             PASSSUBRANGE := FIRSTRANGE;                                80064220
             PREVPASS :=  STOPPERSUBTAB; NEXTFREEENTRY:=NEXTFREEENTRY+1;80064225
          WHILE(SUBDIFF }  ARRSUBSCRIPTRANGE[HISUBS,PASSSUBRANGE]       80064230
                          -ARRSUBSCRIPTRANGE[LOWSUBS,PASSSUBRANGE]) AND 80064235
                  (ARRSUBSCRIPTRANGE[NEXTSUBS,PASSSUBRANGE] !           80064240
                                           STOPPERSUBTAB) DO            80064245
                 BEGIN                                                  80064250
                     PREVPASS := PASSSUBRANGE;                          80064255
                     PASSSUBRANGE := ARRSUBSCRIPTRANGE[NEXTSUBS,        8006426
                                                      PASSSUBRANGE];    80064265
                 END;                                                   80064270
             IF  PREVPASS = STOPPERSUBTAB  THEN                         80064275
             BEGIN                                                      80064280
                 IF  SUBDIFF } ARRSUBSCRIPTRANGE[HISUBS,                80064285
                                                 PASSSUBRANGE] -        80064290
                               ARRSUBSCRIPTRANGE[LOWSUBS,               80064295
                                                 PASSSUBRANGE] THEN     80064300
                 BEGIN                                                  80064305
                     ARRSUBSCRIPTRANGE[NEXTSUBS,PASSSUBRANGE] :=        80064310
                                    NEXTFREEENTRY - 1;                  80064315
                     ARRSUBSCRIPTRANGE[NEXTSUBS,NEXTFREEENTRY-1] :=     80064320
                                    STOPPERSUBTAB;                      80064325
                 END                                                    80064330
                 ELSE                                                   80064335
                 BEGIN                                                  80064340
                     ARRSUBSCRIPTRANGE[NEXTSUBS,NEXTFREEENTRY-1] :=     80064345
                                    FIRSTRANGE;                         80064350
                     FIRSTRANGE := NEXTFREEENTRY-1;                     80064355
                 END                                                    80064360
             END                                                        80064365
             ELSE                                                       80064370
             BEGIN                                                      80064375
                 IF   SUBDIFF } ARRSUBSCRIPTRANGE[HISUBS,PASSSUBRANGE] -80064380
                                ARRSUBSCRIPTRANGE[LOWSUBS,PASSSUBRANGE] 80064385
                                THEN                                    80064390
                 BEGIN                                                  80064395
                    ARRSUBSCRIPTRANGE[NEXTSUBS,PASSSUBRANGE] :=         80064400
                                  NEXTFREEENTRY - 1;                    80064405
                    ARRSUBSCRIPTRANGE[NEXTSUBS,NEXTFREEENTRY-1] :=      80064410
                                  STOPPERSUBTAB;                        80064415
                 END                                                    80064420
                 ELSE                                                   80064425
                 BEGIN                                                  80064430
                    ARRSUBSCRIPTRANGE[NEXTSUBS,PREVPASS] :=             80064435
                                  NEXTFREEENTRY -1;                     80064440
                    ARRSUBSCRIPTRANGE[NEXTSUBS,NEXTFREEENTRY-1] :=      80064445
                                  PASSSUBRANGE;                         80064450
                 END                                                    80064455
             END                                                        80064460
         END;TYP:=IF T1.FORM = ARRAYS THEN T1.ARRTYPE ELSE REALTYPE;    80064465
         T1 := TYPETAB1[TYP];                                           80064470
     END  UNTIL T1.STRUCT = 0 ;                                         80064475
     IF  NOT PARAM  THEN                                                80064480
     BEGIN                                                              80064485
         GEN("]=",2,6);                                                 80064490
         GENID("H",LEVEL1000+NAM,5);                                    80064495
         GEN("[",1,7);                                                  80064500
         PASSSUBRANGE:= FIRSTRANGE; FIRSTDIM := TRUE;                   80064505
         WHILE  PASSSUBRANGE ! STOPPERSUBTAB DO                         80064510
         BEGIN                                                          80064515
             IF FIRSTDIM  THEN  FIRSTDIM := FALSE ELSE GEN(",",1,7);    80064520
             GENID("V",(LEVEL1000+NAM)|(IF PASSSUBRANGE>9 THEN 100 ELSE 8006453
                   10)+PASSSUBRANGE+1,IF PASSSUBRANGE>9 THEN 7 ELSE 6); 80064535
             PASSSUBRANGE := ARRSUBSCRIPTRANGE[NEXTSUBS,PASSSUBRANGE];  80064540
         END;                                                           80064545
         GEN("]#;",3,5);                                                80064550
     END;                                                               80064555
     PASSSUBRANGE := FIRSTRANGE;                                        80064560
     FIRSTDIM := TRUE; GEN("ARRAY",6,3);  GENID("H",LEVEL1000+NAM,5);   80064565
         GEN("[",1,7);                                                  80064570
     WHILE PASSSUBRANGE ! STOPPERSUBTAB DO                              80064575
     BEGIN                                                              80064580
         IF  MAXPERMTAB  LEQ  MAXTOTALSUBSCRS AND PARAM  THEN           80064585
         BEGIN                                                          80064590
             ARRSUBPERMTAB[ARRNAM,MAXPERMTAB] :=                        80064595
                    IF   FIRSTDIM  THEN NAM ELSE -1;                    80064600
             ARRSUBPERMTAB[PERMSUB,MAXPERMTAB] := PASSSUBRANGE;         80064605
             MAXPERMTAB := MAXPERMTAB + 1;                              80064610
         END                                                            80064615
         ELSE                                                           80064620
         BEGIN                                                          80064625
             IF MAXPERMTAB > MAXTOTALSUBSCRS THEN ERROR(0);             80064630
         END;                                                           80064640
         IF FIRSTDIM  THEN FIRSTDIM := FALSE  ELSE  GEN(",",1,7);       80064645
         GENINT(ARRSUBSCRIPTRANGE[LOWSUBS,PASSSUBRANGE]);               80064650
         IF NOT PARAM THEN                                              80064655
         BEGIN                                                          80064660
             GEN(":",1,7);                                              80064665
             GENINT(ARRSUBSCRIPTRANGE[HISUBS,PASSSUBRANGE]);            80064670
         END;                                                           80064675
         PASSSUBRANGE := ARRSUBSCRIPTRANGE[NEXTSUBS,PASSSUBRANGE];      80064680
     END;                                                               80064685
     GEN("]",1,7);                                                      80064950
$                                                                       80421000
     IF CURLEVEL > 1 THEN                                               80421010
     BEGIN                                                              80421020
         INTEGER  NAMOFTHING,DIFF;                                      80421030
         BOOLEAN  FIRSTTIME;                                            80421040
         GEN("BEGIN",6,3);                                              80421050
         IF  MAXPERMTAB > 0 THEN                                        80421060
         BEGIN                                                          80421070
             PASSPERMTAB := 0;                                          80421080
             DO                                                         80421090
             BEGIN                                                      80421100
                 REMEMBERPOSN := PASSPERMTAB;                           80421110
                 GEN("DEFINE",7,2);                                     80421120
                 NAMOFTHING := ARRSUBPERMTAB[ARRNAM,PASSPERMTAB];       80421130
         GENID("V",1000|CURLEVEL+NAMOFTHING,5);                         80421140
                 GEN("[",1,7);                                          80421150
                 FIRSTTIME := TRUE;                                     80421160
                 DO                                                     80421170
                 BEGIN                                                  80421180
                     IF FIRSTTIME THEN FIRSTTIME := FALSE ELSE GEN(",",180421190
                                                                    ,7);80421200
                     DIFF := PASSPERMTAB-REMEMBERPOSN+1;                80421210
         GENID("V",(1000+CURLEVEL+NAMOFTHING)|(IF DIFF>9 THEN 100 ELSE  80421220
                    10)+DIFF,(IF DIFF > 9 THEN 7 ELSE 6));              80421230
                     PASSPERMTAB := PASSPERMTAB + 1; END                80421270
                 UNTIL PASSPERMTAB = MAXPERMTAB OR                      80421280
                       ARRSUBPERMTAB[ARRNAM,PASSPERMTAB] ! -1;          80421290
                GEN("]",1,7);                                           80421300
                GEN("=",1,7);                                           80421310
                GENID("H",1000|CURLEVEL+NAMOFTHING,5);                  80421320
                GEN("[",1,7);                                           80421340
                PASSPERMTAB := REMEMBERPOSN; FIRSTTIME := TRUE;         80421350
                DO                                                      80421360
                BEGIN                                                   80421370
                    IF FIRSTTIME THEN FIRSTTIME := FALSE  ELSE GEN(",", 80421380
                                                                   1,7);80421390
                    DIFF := ARRSUBPERMTAB[PERMSUB,PASSPERMTAB]+1;       80421400
                    GENID("V",(1000|CURLEVEL+NAMOFTHING)|(IF DIFF>9 THEN80421410
                          100 ELSE 10)+DIFF,(IF DIFF>9 THEN 7 ELSE 6)); 80421420
                    PASSPERMTAB := PASSPERMTAB +1;                      80421430
                END                                                     80421440
                UNTIL   PASSPERMTAB = MAXPERMTAB  OR                    80421450
                        ARRSUBPERMTAB[ARRNAM,PASSPERMTAB] ! -1;         80421460
                GEN("]#;",3,5);                                         80421470
             END                                                        80421480
             UNTIL  PASSPERMTAB = MAXPERMTAB;                           80421490
             MAXPERMTAB := 0;                                           80421500
         END                                                            80421510
     END;                                                               80421520
$                                                                       80608000
     BEGIN                                                              80608010
         BEGIN                                                          80608020
             INTEGER NAM,T1,SCRATCH;                                    80608030
             NAM := PARAMTAB[I].[9:10];                                 80608040
             SCRATCH := NAMETAB3[CURLEVEL+1,NAM];                       80608050
             SCRATCH := SCRATCH.TYPE;                                   80608060
             T1 := TYPETAB1[SCRATCH];                                   80608070
             IF T1.STRUCT ! 0 AND T1.FORM  < FILES  THEN                80608080
                GENID("H",1000|(CURLEVEL+1)+NAM,5)                      80608090
             ELSE                                                       80608100
                GENID("V",1000|(CURLEVEL+1)+NAM,5);                     80608110
         END;                                                           80608120
     MAXPERMTAB := 0;                                                   90070100
     INSIDEPARENS := FALSE;                                             90070200
$# PATCH 519 FOR PASCAL.XVI.O. CONTAINS 1 CARDS. INCREASE RUNTIME STACK.
$:
       " XALGOL STACK = 2048; STACK = 1024; END."; %                    90120500
$# PATCH 600 FOR PASCAL.XVI.O. CONTAINS 22  CARDS. DAGS DEC77 PATCHES.
$: PATCHES RECEIVED FROM D.LANGMYHR AND TRANSPOSED FROM COSY FORMAT BY
$: DAVID A COOPER. FEBRUARY 1978.
$:
      IF(F1 NEQ SET OR RT NEQ EMPTYSET) %                               20813000
        AND %                                                           20813050
        (F2 NEQ SET OR LT NEQ EMPTYSET) THEN %                          20813100
        IF(F1 NEQ POINTERS OR RT NEQ NILTYPE) %                         20814000
         AND %                                                          20814050
          (F2 NEQ POINTERS OR LT NEQ NILTYPE) THEN %                    20814100
    BEGIN ERROR(63); %                                                  40023000
$                                                                       50059000
              GEN("PREAD(",6,2);  WRITEEXPR;  GEN(",",1,7); %           50079000
$                                                                       50080000
$                                                                       50081000
              GENID("F",FILEID,5); GEN(",",1,7); %                      50082000
              IF F=NUMERIC THEN %                                       50086010
              BEGIN %                                                   50086050
                  GEN(",",1,7);  GENINT(TYPETAB2[CURTYPE]); %           50086100
                  GEN(",",1,7);  GENINT(TYPETAB3[CURTYPE]); %           50086150
              END ELSE GEN(",0,0,",4,4); %                              50086200
$                  SET VOIDT                                            50088000
$                  POP VOIDT                                            50093000
 IF NAMTAB.IDCLASS=FUNC THEN GEN("FUNCTN",7,2) %                        80037000
                        ELSE GEN("PROCEDU",8,1); %                      80038000
 IF FOUND AND (THISID.IDCLASS=PROC OR THISID.IDCLASS=FUNC) THEN         80548000
$#PATCH 601 FOR PASCAL.XVI.O.CONTAINS 147 CARDS. EXTENDE SET MODS.
$: PATCHES RECEIVED FROM D.LANGMYHR AND TRANSPOSED FROM COSY FORMAT BY
$: DAVID A COOPER. FEBRUARY 1978.
$: THIS PATCH MODIFIES THE SET HANDLING ROUTINES TO ALLOW SETS OF 0..93
$: ELEMENTS
$: NB. THE RUN TIME SYSTEM MUST BE CHANGED ACCORDINGLY.....
$:     --- --- ---- ------ ---- -- ------- ----------------
%                                                                       40052050
%                                                                       40052055
PROCEDURE SPLIT(SPLITINX,WIDTH); %                                      40052100
VALUE SPLITINX, WIDTH; %                                                40052150
INTEGER SPLITINX, WIDTH; %                                              40052200
BEGIN %                                                                 40052250
    INTEGER I; %                                                        40052300
%                                                                       40052350
    IF NUMSYMS+WIDTH LEQ MAXSYMS THEN %                                 40052400
    BEGIN %                                                             40052450
        FOR I:=NUMSYMS STEP -1 UNTIL SPLITINX DO %                      40052500
        SYMTAB[I+WIDTH] := SYMTAB[I]; %                                 40052550
        FOR I:=1 STEP 1 UNTIL WIDTH DO %                                40052600
        SYMTAB[SPLITINX+I-1] := "3000000"; %                            40052650
        NUMSYMS := NUMSYMS + WIDTH; %                                   40052700
    END %                                                               40052750
    ELSE                                                                40052800
    BEGIN %                                                             40052830
        ERROR(63); %                                                    40052860
        NUMSYMS := 1; %                                                 40052890
    END; %                                                              40052900
END OF SPLIT; %                                                         40052950
%                                                                       40052960
%                                                                       40052965
    END; %                                                              40188005
IF TYPETAB1[CURTYPE].FORM=SET THEN %       *** SET VARIABLES            40188010
BEGIN %                                    --- --- ---------            40188025
    INTEGER THISSYML, I; %                                              40188050
%                                                                       40188075
    SPLIT(STARTSYM,1);   SYMTAB[STARTSYM] := "SLOAD("; %                40188100
    IF SIMPLEVAR THEN %                                                 40188125
    BEGIN %                                                             40188150
        PUTSYM(","); %                                                  40188175
        PUTID("W",1000|THISLEVEL+THISINDEX,5); %                        40188200
    END %                                                               40188225
    ELSE %                                                              40188250
    IF INBRACKET AND NOT INRECORD THEN %                                40188275
    BEGIN %                                                             40188300
        PUTSYM(",");   THISSYML := NUMSYMS; %                           40188325
        PUTCONST(0);   PUTSYM(" ");  PUTSYM(","); %                     40188350
        FOR I:=STARTSYM+1 STEP 1 UNTIL THISSYML DO %                    40188375
        PUTTEXT(SYMTAB[I]);                                             40188400
        PUTTEXT("  1]  "); %                                            40188425
    END  %                                                              40188450
    ELSE %                                                              40188475
    BEGIN %                                                             40188500
        THISSYML := NUMSYMS; %                                          40188525
        IF INBRACKET THEN PUTSYM("]"); %                                40188550
        FOR I:=1 STEP 1 UNTIL NUMPOINTERS DO %                          40188575
        BEGIN %                                                         40188600
            PUTTEXT("-1)DIV");   PUTTEXT(" 1022,"); %                   40188625
            PUTTEXT(" T MOD");   PUTTEXT(" 1022]"); %                   40188650
        END; %                                                          40188675
        PUTSYM(","); %                                                  40188700
        FOR I:=STARTSYM+1 STEP 1 UNTIL THISSYML DO %                    40188725
        PUTTEXT(SYMTAB[I]); %                                           40188775
        PUTTEXT("  +1  "); %                                            40188800
        IF INBRACKET THEN PUTSYM("]"); %                                40188825
        FOR I:=1 STEP 1 UNTIL NUMPOINTERS DO %                          40188850
        BEGIN %                                                         40188875
            PUTTEXT("-1)DIV");   PUTTEXT(" 1022,"); %                   40188900
            PUTTEXT(" T MOD");   PUTTEXT(" 1022]"); %                   40188915
        END; %                                                          40188930
        NUMPOINTERS := 0; %                                             40188945
    END;                                                                40188960
    PUTSYM(",");  PUTCONST(CARDCNT);    PUTSYM(")"); %                  40188975
END OF SET VARIABLES; %                                                 40188990
$                                                                       40198000
              IF TYPETAB1[THISID.TYPE].FORM=SET THEN                    40274200
              BEGIN %                                                   40274220
                  GEN(",",1,7); %                                       40274240
                  GENID("W",1000|THISLEVEL+THISINDEX,5); %              40274260
              END; %                                                    40274280
    BOOLEAN FIRST, SPLITTED; %                                          40296000
        PUTTEXT("SETBS(");   PUTTEXT("   3,2,");  PUTCONST(CARDCNT); %  40529000
        PUTSYM(")"); %                                                  40529300
        CURTYPE := EMPTYSET;   CURMODE := NUMBER; %                     40529600
         STARTSYM := NUMSYMS + 1; %                                     40533500
          PUTTEXT(" SETB("); %                                          40536000
            PUTSYM(",");   SYMTAB[STARTSYM] := "SETBS("; %              40544000
        IF SPLITTED THEN PUTSYM(")"); %                                 40551500
        IF CURSY=COMMA THEN %                                           40552000
        BEGIN %                                                         40552200
            SPLIT(STARTSYM,1);   SYMTAB[STARTSYM] := "SUNIO("; %        40552400
            PUTSYM(","); %                                              40552600
            SPLITTED := TRUE; %                                         40552800
        END; %                                                          40552850
       NEWTYPE;  T1 := SET;   T1.SIZE := 2;   T1.STRUCT := 0; %         40558000
       CURMODE := NUMBER; %                                             40561000
       IF CURTYPE=BOOLTYPE THEN %                                       40587000
       IF CURSY NEQ ANDSY THEN ERROR(64);                               40593000
   END ELSE %                                                           40593100
   IF F=SET THEN %                                                      40593200
   BEGIN %                                                              40593300
       IF CURSY=ASTERISK THEN %                                         40593400
       BEGIN %                                                          40593500
           SPLIT(STARTSYM,1);   SYMTAB[STARTSYM] := "SINTS("; %         40593600
           PUTSYM(","); %                                               40593700
       END ELSE ERROR(64); %                                            40593800
       MODE := NUMBER; %                                                40593900
     IF F=SET THEN PUTSYM(")"); %                                       40608500
       SPLIT(STARTSYM,1); %                                             40650000
       IF CURSY=PLUS THEN SYMTAB[STARTSYM] := "SUNIO(" ELSE %           40651000
       IF CURSY=MINUS THEN SYMTAB[STARTSYM] := "SDIFF(" ELSE %          40652000
          ERROR(64); %                                                  40653000
       PUTSYM(",");   MODE := NUMBER; %                                 40654000
$                                                                       40655000
     IF F=SET THEN PUTSYM(")"); %                                       40668500
$                                                                       40688000
       IF CURSY=EQLSY THEN SYMTAB[STARTSYM] := "SEQUA(" %               40713000
       ELSE                                                             40713150
       IF CURSY=NEQSY THEN %                                            40713300
       BEGIN %                                                          40714000
           SPLIT(STARTSYM,1);   SYMTAB[STARTSYM]:= " NOT  "; %          40714150
           SYMTAB[STARTSYM+1] := "SEQUA("; %                            40714300
       IF TYPETAB1[LEFTTYPE].FORM=SET THEN %                            60080100
       BEGIN %                                                          60080200
          SYMTAB[1] := "SSTOR(";    NUMSYMS := NUMSYMS - 3; %           60080300
          EXPRESSION; %                                                 60080400
          PUTSYM(")");   CHECKTYPES(LEFTTYPE,CURTYPE); %                60080500
          WRITEEXPR; %                                                  60080600
       END ELSE %                                                       60080700
         IF TYPETAB2[TX] LSS 0 OR TYPETAB3[TX] GTR 93 THEN ERROR(51);   70210000
       T1.SIZE := TSIZE := 2;   TYPETAB1[TYPEINDEX] := T1; %            70214000
       IF T1.FORM=SET THEN %                                            80046200
       BEGIN %                                                          80046400
           GEN(",",1,7);   GENID("W",LEVEL1000+NAM,5); %                80046600
       END; %                                                           80046800
         IF T1.FORM=SET THEN %                                          80064700
         BEGIN %                                                        80064750
             GEN(",0",2,6); %                                           80064800
             IF NOT PARAM THEN GEN(":1",2,6); %                         80064850
         END; %                                                         80064900
               BEGIN %                                                  80608105
              IF T1.FORM=SET THEN %                                     80608111
               BEGIN %                                                  80608113
                   GEN(",",1,7); %                                      80608115
                   GENID("W",1000|(CURLEVEL+1)+NAM,5); %                80608117
               END;                                                     80608118
             END; %                                                     80608119
             IF TYPETAB1[NAMETAB3[CURLEVEL+1,PARAMTAB[I].PARAMNAME].TYPE80627200
                         ].FORM=SET                                     80627205
             THEN BEGIN %                                               80627400
                      GEN(",",1,7); %                                   80627600
                      GENID("W",1000|(CURLEVEL+1)+PARAMTAB[I].PARAMNAME 80627800
                            ,5); %                                      80627801
                 END;                                                   80627850
$#PATCH 602 FOR PASCAL.XVI./ CONTAINS 5 CARDS. CORRECT REPRESENTATION OF "NIL".
$: RECEIVED FROM DAG LANGHYMR ON 6/07/78.
$: DAVID A COOPER , HERIOT-WATT UNIVERSITY... JULY 1978.
NILTYPE := 6;             %*** TYPE OF "NIL" ***                        20363000
T1.FORM := POINTERS;    TYPETAB1[6] := T1;                              20364000
EMPTYSET := 7; %                                                        20364500
T1.FORM := SET;   TYPETAB1[7] := T1;                                    20365000
NUMTYPES := 7; %                                                        20365500
$# PATCH 603 FOR PASCAL XVI.O CONTAINS 6 CARDS. CORRECT TO PATCH 601
$:   DAVID A COOPER & S O ANDERSON, HERIOT-WATT UNIVERSITY.   UST AUGUST 1978
$:
    INTEGER  STARTSYM,FIRSTSYM,MODE,TYPE1,F;                            40618000
    PUTDUMMY; STARTSYM := FIRSTSYM := NUMSYMS;                          40621000
        SPLIT(FIRSTSYM,1);                                              40650000
        IF CURSY = PLUS THEN SYMTAB[FIRSTSYM] := "SUNIO(" ELSE          40651000
        IF CURSY = MINUS THEN SYMTAB[FIRSTSYM] := "SDIFF(" ELSE         40652000
         ERROR(64);                                                     40653000
$# PATCH 614 FOR PASCAL.XVI.O. CONTAINS 7 CARDS.
$                                                                       40105100
$                                                                       40105200
$                                                                       40105300
$                                                                       40105400
    IF INSIDEPARENS AND SIMPLEVAR AND TYPETAB1[CURTYPE].STRUCT > 0 AND  40198500
       TYPETAB1[CURTYPE].FORM < FILES  THEN SYMTAB[STARTSYM].[35:6] :=  40198600
                                                              "H";      40198700
$# PATCH 700 FOR PASCAL.XVI.O  HAS  179 CARDS.   REDUCE THRASHING BY CODE CHANGE
$: TO IMPROVE RUN TIME EFFICIENCY BY REAARRANGING THE THE COMPILERS CODE.
$: THE COMPILER HAD A HIGH OVERLAY I/O TIME AND HIGH ELAPSED TIME IN RELATION
$: TO THE PROCESS TIME, AND OBSERVATION OF THE B5700 CONFIRMED THAT IT WAS
$: THRASHING IN 32K.  THIS PATCH ATTEMPTS TO REDUCE THE CORE REQUIREMENTS BY
$: REARRANGING THE SEGMENTATION OF THE CODE.  LARGE SEGMENTS ARE ELIMINATED
$: SO AS TO AVOID PULLING CODE THAT WILL NOT BE EXECUTED INTO CORE AND TO
$: RELEASE CODE SEGMENTS AS SO AS EXECUTION HAS PASSED. FOR EXAMPLE, THE
$: CROSS REFERENCE ROUTINES WERE ALL CONTAINED IN THE LARGE OUTER BLOCK CODE
$: SEGMENT WHICH INCLUDED VARIOUS UTILITY ROUTINES.
$: A FEATURE WHICH CONTRIBUTED SIGNIFICANTLY TO LARGE SEGMENTS WAS THE HIGH
$: NUMBER OF "DEFINES" WHICH RESULTED IN SIZEABLE SECTIONS OF CODE BEING
$: GENERATED IN-LINE, SOMETIMES MANY TIMES IN ONE SEGMENT.  THESE "DEFINES"
$: WERE READILY CHANGED INTO PROCEDURES. (A SIDE EFFECT OF VIRTUALLY ELIMINATING
$: DEFINES FOR CODE IS THAT THE "BEND" OPTION NO LONGER RESULTS IN NUMEROUS
$: BLANK LINES REPEATING THE SAME SEQUENCE NUMBER FOR EVERY "END" IN THE NESTED
$: DEFINES.)
$:  NILS A OTTE,   UNIVERSITY OF NATAL, DURBAN     AUG - NOV 1977.
$:
$                                                                       10167000
$                                                                       10168000
$                                                                       10169000
  VALUE       NAME1,NAME2,TABLE,DECL;                                   20016000
  REAL        NAME1,NAME2;                                              20017000
  INTEGER                 TABLE;  BOOLEAN DECL;                         20018000
  FORWARD;                                                              20019000
PROCEDURE  PRINTERRORS;  FORWARD;                                       20020000
PROCEDURE  HEADING;          %*** PRINTS A HEADING AT START OF NEW PAGE.20026000
BEGIN                        DEFINE NEWSEGMENT = HERE #;                20027000
END OF HEADING;                                                         20033000
PROCEDURE  PRINTLINE;        %*** PRINTS A PASCAL SOURCE CODE LINE      20036000
BEGIN                        DEFINE NEWSEGMENT = HERE #;                20037000
END OF PRINTLINE;                                                       20047000
PROCEDURE  NEWCARD;          %*** READS A NEW PASCSAL SOURCE CODE CARD  20050000
BEGIN                        DEFINE RESULT = ICARD[*], ETC #;           20051000
    REPLACE XLINEPNT BY " " FOR 16 WORDS;                               20056000
    REPLACE LINEPNT  BY CARDPNT FOR 10 WORDS, XLINEPNT FOR 6 WORDS;     20057000
END OF NEWCARD;                                                         20061000
DEFINE GEN(GEN1,GEN2,GEN3) = GENI(TRUE,GEN1,GEN3,GEN2) #,               20063100
GENID(GENID1,GENID2,GENID3)= GENI(FALSE,GENID1,GENID2,GENID3) #;        20063200
                                                                        20063300
PROCEDURE  GENI(GENT, TXT, NUM, N);                                     20063400
VALUE GENT, TXT, NUM, N;                                                20063500
BOOLEAN GENT;  ALPHA TXT;  INTEGER NUM, N;                              20063600
BEGIN                        DEFINE START = NUM #, NDIG = N #;          20063700
                                                                        20063800
    IF GENT THEN              %*** GENERATE A TEXT "TXT", CONSISTING OF 20064000
    TEXT[0] := TXT;                                                     20067000
END                                                                     20070000
ELSE                        %*** GENERATE AN ALGOL IDENTIFIER.          20073000
    CH[0] := TXT;                                                       20076000
END END  GENI;                                                          20079000
PROCEDURE  GENINT( N );                                                 20082000
VALUE N;  INTEGER N;                                                    20083000
BEGIN                       DEFINE RESULT = ALGOL CODE #;               20084000
    INTEGER NABS, NSIZE;                                                20085000
END OF GENINT;                                                          20097000
PROCEDURE WRITEALGOL;       %*** WRITES A COMPLETED ALGOL CARD TO       20145000
    DEFINE NEWSEGMENT = HERE #;                                         20146100
    DEFINE NEWSEGMENT = HERE #;                                         20168100
    DEFINE NEWSEGMENT = HERE #;                                         20180100
    DEFINE NEWSEGMENT = HERE #;                                         20193100
ALPHA THISID, CURNAME1, CURNAME2, TNAME;  % USED IN SCANNER             20205000
PROCEDURE  SEARCHTAB( TAB ); %*** SEARCH NAME TABLE "TAB" FOR THE       20208000
VALUE TAB;  INTEGER TAB;     %***  IDENTIFIER JUST READ.                20208100
END OF SEARCHTAB;                                                       20221000
PROCEDURE  SEARCH;           %*** SEARCH ALL TABLES CURRENTLY IN USE.   20223000
BEGIN                        DEFINE RESULT = THISID #;                  20224000
END OF SEARCH;                                                          20233000
PROCEDURE  NEWNAME( NAME1, NAME2, TAB );                                20236000
VALUE NAME1, NAME2, TAB;                                                20236100
ALPHA NAME1, NAME2;  INTEGER TAB;                                       20236200
END OF NEWNAME;                                                         20250000
    DEFINE NEWSEGMENT = HERE #;                                         20515100
    DEFINE NEWSEGMENT = HERE #;                                         20533100
    DEFINE NEWSEGMENT = HERE #;                                         20546100
PROCEDURE  CHECKTYPES(LEFTTYPE, RIGHTTYPE );                            20802000
VALUE LEFTTYPE, RIGHTTYPE;  INTEGER LEFTTYPE, RIGHTTYPE;                20803000
BEGIN                                                                   20804000
    REAL TT1, TT2;  INTEGER F1, F2, LT, RT;                             20805000
END OF CHECKTYPES;                                                      20838000
PROCEDURE  FILEPARAM( DEFAULTFILE );   %*** CHECKS THE FIRST PARAMETER  20844000
VALUE DEFAULTFILE; INTEGER DEFAULTFILE;%*** TO SEE IF IT IS A FILE.     20844100
BEGIN              DEFINE RESULTS = FILENAME & LPARFOUND #;             20845000
END OF FILEPARAM;                                                       20869000
REAL CURVAL;  INTEGER CURLENGTH;                                        20872000
                                                                        20873000
PROCEDURE CONSTANT( CVAL, CTYPE );                                      20874000
REAL CVAL;  INTEGER CTYPE;                                              20875000
BEGIN                                                                   20876000
    INTEGER TFORM;  BOOLEAN SIGNED, NEGATIVE;                           20876100
END OF CONSTANT;                                                        20921000
$                                                                       30082000
ALPHA  C, CX;       %( CURNAME1 & CURNAME2 MOVED TO 20205000 )          30083000
INTEGER LASTCHARPOS;  %( CURVAL, CURLENGTH MOVED TO 20872000 )          30084000
PROCEDURE  INSYMBOL;         %*** IDENTIFIES THE NEXT SYMBOL ******     30087000
BEGIN                                                                   30087100
                                                                        30087200
    PROCEDURE   NEXTCHAR;    %*** GETS THE NEXT CHARACTER.              30088000
    END OF NEXTCHAR;                                                    30093000
$                                                           SET VOIDT   30095000
$                                                           POP VOIDT   30098000
    DEFINE  T1 = EXP #;      % USED AT 30178000                         30099100
            BEGIN                 DEFINE NEWSEGMENT = HERE #;           30261100
            END NEWSEGEMENT;                                            30282200
$                                                                       40016000
$                                                                       40017000
INTEGER  EXPRLEVEL;                                                     40018000
DEFINE PUTSYM(S) = PUTTEXT( (S)&1[41:5:6] ) #;                          40029000
$                                                           SET VOIDT   40029900
$                                                           POP VOIDT   40033000
DEFINE PUTDUMMY = PUTTEXT("3000000") #;                                 40041000
$                                                           SET VOIDT   40042000
$                                                           POP VOIDT   40044000
PROCEDURE  WRITEEXPR;       %*** WRITE GENERATED ALGOL EXPRESSION       40053000
    REAL SX;  INTEGER T1, TX;                                           40054100
END OF WRITEEXPR;                                                       40066000
PROCEDURE  CHECKEXPR( LLIM, ULIM );   %*** WRITE CODE TO CHECK VALUE    40069000
    VALUE LLIM, ULIM;  INTEGER LLIM, ULIM;                              40069100
BEGIN                                 DEFINE CHECK = VALUE #;           40070000
END OF CHECKEXPR;                                                       40077000
    INTEGER T1, T5;          % USED ONCE EACH                           40086100
      T1:=T.FIRSTWITHSYM;  T5:=T.LASTWITHSYM;                           40094000
      FOR T1:=T1 STEP 1 UNTIL T5 DO PUTTEXT(WITHTAB[T1]);               40095000
    DEFINE  T1 = T #;      % USED AT 405558000                          40298000
$                                                           SET VOIDT   40299000
$                                                           POP VOIDT   40309000
                                                                        40331000
         PROCEDURE PARAMETER;  %*** CHECK THAT THE FUNCTION HAS 1 PARAM.40332000
            BEGIN                                                       40333000
            INSYMBOL;                                                   40334000
            IF CURSY=LPAR                                               40335000
            THEN BEGIN                                                  40336000
              PUTSYM("(");  INSYMBOL;  EXPRESSION;                      40337000
              IF TYPETAB1[CURTYPE].FORM=NUMERIC THEN CURTYPE:=INTTYPE;  40338000
              IF CURSY!RPAR THEN BEGIN ERROR(3); SKIP(RPAR) END;        40339000
              PUTSYM(")");  IF CURSY=RPAR THEN INSYMBOL;                40340000
            END ELSE ERROR(3); % OR ERROR(58)                           40341000
         END OF PARAMETER;                                              40342000
                                                                        40350000
$                                                                       60396000
    BEGIN     LABEL LABFOUND;                                           60399000
           THISID.IDCLASS=CONST AND BOOLEAN(THISID.FORMAL) OR           60423000
           THISID.IDCLASS=FUNC                                          60423200
        THEN  ASSIGNMENT  ELSE                                          60424000
$                                                           SET VOIDT   70013000
$                                                           POP VOIDT   70016000
   VALUE            RECTAB,FIRSTADDR;                                   70018000
   INTEGER          RECTAB,FIRSTADDR,LASTADDR;                          70019000
$                                                           SET VOIDT   70022000
$                                                           POP VOIDT   70034000
                                                                        70035000
PROCEDURE   TYPEDECL(  TTYPE, TSIZE );  %***** TYPE DECLARATION *****   70036000
  INTEGER              TTYPE, TSIZE;    %****************************   70037000
BEGIN                                                                   70038000
    INTEGER RECINX, ARRSTRUCT, TX, SX, T, N;  REAL T1, T2, T3;          70039000
    BOOLEAN  FIRST, PACKED;                                             70040000
                                                                        70041000
$                                                                       70042000
    END TYPERR;                                                         70048000
  PROCEDURE  SUBRANGE;                  %*** SUBRANGE DECLARATION ***   70050000
  BEGIN                                 %****************************   70051000
    REAL     VALX1,  VALX2, T1;                                         70052000
    INTEGER TYPEX1, TYPEX2;                                             70053000
                                                                        70054000
    CONSTANT(VALX1,TYPEX1);                                             70055000
    IF TYPETAB1[TYPEX1].FORM>CHAR THEN ERROR(11);                       70056000
    IF CURSY!DOUBLEDOT THEN ERROR(53);                                  70057000
    INSYMBOL;                                                           70058000
    CONSTANT(VALX2,TYPEX2);                                             70059000
    IF TYPEX1>0 AND TYPEX2>0 THEN                                       70060000
      IF TYPEX1!TYPEX2 THEN ERROR(11) ELSE                              70061000
      IF VALX1>VALX2   THEN ERROR(54);                                  70062000
    IF (T1:=TYPETAB1[TYPEX1].FORM) = SYMBOLIC THEN  T1:=SUBTYPE;        70063000
    NEWTYPE;  TTYPE:=TYPEINDEX;                                         70064000
    T1.SIZE:=TSIZE:=1;  T1.STRUCT:=0;  T1.MAINTYPE:=TYPEX1;             70065000
    TYPETAB1[TYPEINDEX]:=T1;                                            70066000
    TYPETAB2[TYPEINDEX]:=VALX1;  TYPETAB3[TYPEINDEX]:=VALX2;            70067000
  END OF SUBRANGE;                                                      70068000
                                                                        70069000
                                        DEFINE DEC = POINTER #;         70117100
                                        DEFINE DEC = ARRAY #;           70143100
                                        DEFINE DEC = FILE #;            70180100
                                        DEFINE DEC = SET #;             70200100
                                        DEFINE DEC = RECORD #;          70220100
    LABEL CASEPART, EXIT;                                               70247000
    BEGIN                               DEFINE DEC = VARIANT #;         70285100
    LABEL CASETYPEID;                                                   70285200
    END;                                                                70349100
                                        DEFINE DEC = FILE #;            80066100
              GEN(""/",2,6);                                            80107000
                                        DEFINE DEC = LABEL #;           80424100
                                        DEFINE DEC = CONST #;           80447100
                                        DEFINE DEC = TYPE #;            80475100
                                        DEFINE DEC = VAR #;             80496100
    IF    CURSY=FUNCSY OR CURSY=PROCSY    %                             80540900
    THEN BEGIN                            DEFINE DEC = CODE #;          80540910
    END OF SEGMENT FOR PROCEDURE DECLARATIONS;                          80648100
$# PATCH 701 FOR PASCAL.XVI.O CONTAINS 14 CARDS.  REDUCE THRASHING BY ARRAY CUTS
$: TO IMPROVE RUN TIME EFFICIENCY BY REDUCING ARRAY SIZES.  THE MOST SIGNIFICANT
$: CONTRIBUTION TO THE COMPILERS THRASHING BEHAVIOUR WAS THE EXCESSIVELY LARGE
$: DATA ARRAYS. THIS PATCH SUCCEEDS IN DRASTICALLY REDUCING THE CORE REQUIREMENT
$: OF THE COMPILER BY MAKING MOST OF THE LARGE ARRAYS MUCH SMALLER WITHOUT
$: IMPOSING UNREASONABLE RESTRICTIONS.  IN PARTICULAR, THE THREE ARRAYS,
$: NAMETAB1, NAMETAB2, NAMETAB3 WRE EHACH [0:50, 0:1022], AND HAVE BEEN REDUCED
$: TO [0:30, 0:307].  THESE REDUCTIONS HAVE NOT PREVENTED THE COMPILATION OF
$: A LARGE PASCAL PROGRAM OF ABOUT 4000 LINES, NAMELY THE P4 PASCAL COMPILER
$: FROM ZURICH.  IN FACT, PRIOT TO THE CHANGES INTRODUCED BY PATCHES 700 & 701,
$: THE P4 PASCAL COMPILER TOOK 60 MINUTES ELAPSED TIME TO COMPILE, WHICH WAS
$: REDUCED TO 9 MINUTES BY THESE PATCHES, WHILE THE PROCESS TIME HAS REMAINED
$: CONSTANT AT 9 MINUTES.
$:**** NOTE THAT IF "MAXNAMES" IS CHANGED THEN THERE ARE 7 DEFINES IN THE FILE
$:     PASCAL/PRELUDE THAT MUST ALSO BE CHANGED.
$: "MAXNAMES" WAS CHOSEN AS A PRIME NUMBER AS IT IS USED AS A MODULUS FOR A HASH
$: FUNCTION.  THE PASCAL IDENTIFIERS ARE TRANSLATED TO ALGOL NAMES USING LEVEL
$: AND HASH INDEX.  HENCE CHANGING "MAXNAMES" CHANGES THE ALGOL NAMES FOR
$: "INPUT", "OUTPUT", & "PRT25".
$:  NILS A OTTE,   UNIVERSITY OF NATAL, DURBAN     AUG - NOV 1977.
$:
DEFINE MAXTABLES  = 30 #,    %MAX NUMBER OF LEVELS  IN IDENTIFIER TABLE.10042000
       MAXNAMES   =307 #,    %MAX NAMES IN EACH ROE OF IDENTIFIER TABLE.10043000
                             % ONLY USED IN WITH STATEMENT TO TEST      10044001
       MAXCASES   =64 #,     %MAX LABELS IN A CASE-STATEMENT.           10045000
       MAXLABS    =50 #,     %MAX NUMBER OF LABELS.                     10046000
       MAXPARAMS  =200 #,    %MAX NUMBER OF PARAMETERS IN WHOLE PROGRAM.10047000
       MAXTYPES   =250 #,    %MAX NUMBER OF DIFFERENT TYPES.            10048000
       MAXCONSTS  =100 #,    %SIZE OF CONSTANT TABLE.                   10049000
       MAXWITHSYMS= 70 #,    %MAX NUMBER OF SYMBOLS USED BY WITH-STATMS.10051000
       MAXSYMS    =200 #,    %MAX NUMBER OF SYMBOLS IN ONE EXPRESSION.  10052000
       LISTLENGTH =100 #,    %MAX LENGTH OF VAR AND PARAM LISTS.        10053000
       MAXEXTFILES=10 #,     %MAX NUMBER OF EXTERNAL FILES.             10054000
       MAXFILES   =10 #,     %MAX NUMBER OF FILES DECLARED AT ONE TIME. 10055000
       MAXPNTRS   =10 #;     %MAX NUMBER OF UNDECLARED POINTERS.        10056000
$# PATCH 702 FOR PASCAL.XVI.O CONTAINS  4 CARDS.  BOOLEAN ARRAY "ERR" 120 TO 4
$: TO EXTEND THE REDUCTIONS OF PATCH 701 TO THE BOOLEAN ARRAY "ERR" FOR NOTING
$: THE SYNTAX ERRORS THAT HAVE OCCURRED.  THIS PATCH COMPRESSES THE ARRAY FROM
$: 120 WORDS TO 4 WORDS BY USING 32 BITS IN EACH WORD.
$: IN ADDITION, THIS PATCH INSERTS THE ERROR COUNT ON THE LEFT OF THE LINE
$: WHICH REPORTS THE SYNTAX ERRORS.
$:  NILS A OTTE,   UNIVERSITY OF NATAL, DURBAN.    AUG - NOV 1977.
$:
ARRAY ERRP[0:3];   % HOLDS 128 BITS     % RECORDS ERROR MESSAGES USED.  10156000
DEFINE ERR[ERR1] = BOOLEAN(0&ERRP[ERR1.[6:2]][0:ERR1.[4:5]:1]) #;       10156108
    ERRP[ERRNUM.[6:2]]:=ERRP[ERRNUM.[6:2]] & 1[ERRNUM.[4:5]:0:1];       20182000
    REPLACE POINTER(ERRLINE[0])+4 BY NUMERRS FOR 4 DIGITS;              20194900
$# PATCH 703 FOR PASCAL.XVI.O CONTAINS  6 CARDS.  REDUCE THRASHING BY SAVE CORE
$: TO IMPROVE RUN-TIME EFFICIENCY BY REDUCING NON-OVERLAYABLE AREAS.
$: THIS PATCH REDUCES THE SAVE CORE REQUIREMENTS BY DECREASING THE FILE BLOCK
$: SIZES AND ALSO THE NUMBER OF BUFFERS WITHOUT UNDULY RETARDING THE COMPILATION
$: SPEED.  THE SIZE OF THE DISK AREAS IS KEPT A MULTIPLE OF THE ORIGINAL BLOCK
$: SIZE WHERE RELEVANT TO AVOID INCOMPATIBILITY PROBLEMES. COMPARABLE REDUCTIONS
$: IN BLOCK SIZES OF THE OBJECT PROGRAM ARE ALSO MADE.
$:  NILS A OTTE,   UNIVERSITY OF NATAL, DURBAN.    AUG - NOV 1977.
$:
FILE CARD "SOURCE" (1,10,38);      % PASCAL SOURCE CODE INPUT FILE      10035000
FILE PASCALGOL DISK SERIAL [20:300] (1,10,30,SAVE 0);  % ALGOL CODE FILE10037000
FILE XREFFILE DISK SERIAL [20:3000] (1,3,30);    % FOR CROSS REFERENCE  10137000
            IF RECSIZE=1 OR RECSIZE=10 THEN GENINT(30)                  80119000
            GEN(",SAVE",6,3);                                           80122000
            GEN("30);", 4,4);                                           80123000
$# PATCH 704 FOR PASCAL.XVI.O HAS  8 CARDS.     REDUCE OVERHEADS IN COPYING FILE
$: TO REDUCE THE COMPILER-S OVERHEADS.  FIRSTLY, THE ALGOL CODE FILE
$: PASCRUN/DISK  IS RENAMED  PASCAL/PRELUDE.  ORIGINALLY, THE COMPILER COPIED
$: THE PASCAL/PRELUDE FILE INTO THE GENERATED CODE FILE BEFORE STARTING TO
$: TRANSLATE THE PASCAL PROGRAM.  THIS PATCH SAVES THE 3 SECONDS OR SO REQUIRED
$: FOR THIS BY SETTING THE "TAPE" OPTION FOR THE ALGOL COMPILER AND LABEL
$: EQUATING THE TAPE FILE TO PASCAL/PRELUDE.  THE OVERHEAD TO THE ALGOL COMPILER
$: IS NEGLIGIBLE.  THE ADVANTAGE IS EVEN GREATER IF THE PROGRAM FAILS TO
$: COMPILE SYNTAX FREE.  THE FILE PASCAL/PRELUDE IS NO LONGER REFERENCED
$: DIRECTLY IN THE PASCAL COMPILER.
$: SEE PATCH 711.  THIS NEEDS PATCH 705.
$:  NILS A OTTE,   UNIVERSITY OF NATAL, DURBAN.    AUG - NOV 1977.
$:
       ERRORS   (I5," ERRORS DETECTED ",20("#") /),                     10188000
       ALIST    ("$ SET LIST "),                                        10189000
       MERGE    ("$ SET TAPE RESET $" /                                 10190100
                 "$ RESET TAPE", T73,"99000000" ),                      10190200
       TERMMESS ("****    COMPILATION TERMINATED.");                    10192000
WRITE(PASCALGOL,MERGE);  % ALGOL MUST COMPILE PRELUDE FIRST             90022000
$                                                           SET VOIDT   90023000
$                                                           POP VOIDT   90032000
$:       "; ALGOL FILE TAPE= PASCAL/PRELUDE SERIAL; ALGOL FILE CARD=",  90119000
$# PATCH 705 FOR PASCAL.XVI.O CONTAINS 21 CARDS.  GENERATE A BETTER ZIP
$: THIS PATCH TIDIES UP THE CODE THAT GENERATES THE ZIP TO PASS CONTROL TO THE
$: COMPATABLE ALGOL COMPILER.
$:  NILS A OTTE,   UNIVERSITY OF NATAL, DURBAN.    AUG - NOV 1977.
$:
$                                                                       90013000
    PROGNAME := IF CURLENGTH < 7                                        90042000
                THEN "      "&CURNAME1[41:6|CURLENGTH-1:6|CURLENGTH]    90042010
                ELSE CURNAME2.[5:6]&CURNAME1[41:35:36];                 90042020
$:  ARRAY ZIPARRAY[0:16];                                               90092000
    DEFINE PPROGNAME = 13 #,   PALGOLNAME = 14 #,                       90095000
           PLIBRARY  = 15 #,   PUSER      = 16 #,                       90096000
           P(P1)     = POINTER(ZIPARRAY[P1])+1 FOR 7 #;                 90097000
$                                                           SET VOIDT   90098000
$                                                           POP VOIDT   90104000
$                                                                       90109000
    ZIPARRAY[PPROGNAME]:=PROGNAME;   ZIPARRAY[PALGOLNAME]:=ALGOLNAME;   90112000
    ZIPARRAY[PLIBRARY]:= IF SAVEFACTOR>0 THEN "LIBRARY" ELSE            90113000
                         IF SAVEFACTOR<0 THEN " SYNTAX" ELSE " & RUN "; 90114000
    ZIPARRAY[PUSER]:=USER;                                              90115000
    REPLACE POINTER(ZIPARRAY[*]) BY "CC COMPILE ",                      90116000
         P(PPROGNAME), "/", P(PUSER),                                   90117000
         " XALGOL ", P(PLIBRARY),                                       90118000
         "; ALGOL FILE TAPE= PASCAL/PRELUDE SERIAL; ALGOL FILE CARD=",  90119000
         P(PALGOLNAME), "/", P(PUSER), " SERIAL; END.";                 90120000
$                                                           SET VOIDT   90121000
$                                                           POP VOIDT   90128000
$# PATCH 708 FOR PASCAL.XVI.O CONTAINS 25 CARDS. LINE PRINT FILE MAY BE DISK
$: TO ENABLE THE COMPILER-S PRINT FILE TO BE LABEL EQUATED TO DISK AS FOR OTHER
$: B5700 COMPILERS.  IN PARTICULAR, THIS PATCH CHANGES THE NAME TO LINE TO BE
$: CONSISTENT WITH ALL THE SYSTEM COMPILERS.  THE ABILITY TO LABEL EQUATED FILE
$: "LINE" TO DISK IS NECESSARY IF THE COMPILER IS TO BE USED FROM A TERMINAL.
$: NOTE THAT A BLOCKED FILE SHOULD NOT HAVE VARIABLE LENGTH RECORDS IF IT IS
$: TO BE LABEL EQUATED TO A PRINTER.  IF LESS THAN A THE MAX NUMBER OF WORDS PER
$: RECORD IS WRITTEN, THE BALANCE OF THE RECORD REMAINS UNCHANGED FROM WHAT WAS
$: LAST IN THE FILE BUFFER, SO THAT ON BEING PRINTED "GARBAGE" APPEARS AT THE
$: END OF SUCH LINES.
$:  NILS A OTTE,   UNIVERSITY OF NATAL, DURBAN.    AUG - NOV 1977.
$:
SAVE FILE OUT LINE DISK SERIAL [20:1200] (1,17,90,SAVE 1); % PRINT FILE 10036000
                        % AVOID BLOCKING RECORDS OF VARIABLE LENGTH     10036001
ARRAY ICARD, ALGOLCARD[0:9], LINES, XLINE[0:16];                        10130000
                             % AVOID BLOCKING VARIABLE LENGTH RECORDS   10130001
ARRAY HEADTEXT, ERRLINE[0:16];                                          10133000
      WRITE( LINE[NO], 17,XLINE[*]);                                    20042000
      WRITE( LINE[NO], 17,ERRLINE[*]);                                  20043000
    WRITE( LINE[NO], 17,XLINE[*]);                                      20045000
    WRITE( LINE[NO], 17,ERRLINE[*]);                                    20195000
    LINEPNT :=POINTER(LINES[1]);                                        20315000
    REPLACE LINEPNT-8 BY " " FOR 17 WORDS;                              20317000
    REPLACE XLINEPNT-8 BY LINEPNT-8 FOR 17 WORDS;                       20318000
    REPLACE POINTER(ERRLINE[*]) BY "****   ", LINEPNT FOR 16 WORDS;     20319000
    REPLACE ALGOLPNT BY LINEPNT FOR 9 WORDS;                            20321000
    REPLACE POINTER(HEADTEXT[*]) BY LINEPNT FOR 10 WORDS, "PAGE 1  ",   20326000
                                    LINEPNT FOR  6 WORDS;               20326100
      WRITE(LINE, 17,XREFLINE[*]);                                      20549000
      LOCK( LINE, * ); % & CRUNCH                                       20550000
          WRITE(LINE, 17,XREFLINE[*]);  LINECNT:=LINECNT+1;             20560000
        WRITE(LINE, 17,XREFLINE[*]);  LINECNT:=LINECNT+1;               20571000
            WRITE(LINE, TERMMESS);                                      90084000
     WRITE(LINE, NOERRORS);                                             90111000
    WRITE(LINE, ERRORS,NUMERRS);                                        91110000
    WRITE(LINE, ERRORMESS1[I]);                                         91112000
    WRITE(LINE, ERRORMESS2[I-60]);                                      91114000
$# PATCH 709 FOR PASCAL.XVI.O CONTAINS 17 CARDS. NO PRINT IF NO LIST & NO ERRORS
$: TO OPEN THE PRINT FILE ONLY IF THE LIST OPTION IS SET OR IF SYNTAX ERRORS
$: ARE DETECTED.  IF THE FIRST CARD IN THE PASCAL SOURCE RESETS THE LIST OPTION
$: (*$L- *) AND NO SYNTAX ERRORS ARE DETECTED, THEN THE PRINT FILE WILL NOT BE
$: CREATED (EVEN FOR THE HEADING) AS FOR OTHER COMPILERS.  IN PARTICULAR, THIS
$: IMPLEMENTATION DOES NOT REQUIRE A TEST PRIOR TO PRINTING EACH LINE TO
$: DETERMINE WHETHER A HEADING HAS BEEN PRINTED.  IT ONLY DOES THIS TEST WHEN
$: THE LIST OPTION IS SET AFTER THE FIRST CARD OR EXPLICITLY THEREAFTER, OR
$: IN THE "PRINTERRORS" ROUTINE.
$:  NILS A OTTE,   UNIVERSITY OF NATAL, DURBAN.    AUG - NOV 1977.
$:
    IF PAGECNT=1 THEN WRITE(LINE[NO],17,HEADTEXT[*]) ELSE               20029000
    WRITE( LINE[PAGE]);                                                 20030000
    WRITE( LINE[DBL],17,HEADTEXT[*]);                                   20031000
    IF NOT LISTOPTION THEN                                              20194000
         BEGIN IF PAGECNT=0 THEN HEADING;  PRINTLINE  END;              20194100
    REPLACE POINTER(HEADTEXT[*])+45 BY TEXTPNT+3 FOR 2,"/",             20329000
            TEXTPNT+1 FOR 2, "/", TEXTPNT+3 FOR 2;                      20330000
    NEWCARD; LISTOPTION:=CHECKOPTION:=TRUE;  % DEFAULT                  20402100
    INSYMBOL;     % ANALYSING FIRST CARD MAY CHANGE DEFAULT LIST OPTN   20402200
    IF LISTOPTION AND PAGECNT=0 THEN HEADING;  % ON FIRST PAGE.         20402300
           IF LISTOPTION THEN IF PAGECNT=0 THEN HEADING; % ON FIRST PAGE30282100
C := " ";     % TO INITIALIZE "INSYMBOL"                                90034000
INITIALIZE;   % COMPILER TABLES, NEWCARD, INSYMBOL                      90035000
$                                                                       90036000
IF PAGECNT > 0     % THERE HAS BEEN SOME LISTING                        90088000
THEN BEGIN  WRITE( LINE[DBL] );  WRITE( LINE[DBL] )  END;               90089000
    IF PAGECNT>0 THEN   % THERE HAS BEEN LISTING                        90110000
$# PATCH 711 FOR PASCAL.XVI.O CONTAINS 10 CARDS. PASC001/USERCODE UNIQUE NAME
$: TO GENERATE A UNIQUE FILE NAME IN THE DISK DIRECTORY.  THIS PATCH CHANGES THE
$: METHOD FOR GENERATING A UNIQUE FILE NAME FOR THE ALGOL SOURCE CODE OUTPUT OF
$: THE COMPILER.  FORMERLY, THIS WAS DONE USING THE TIME FUNCTION TO OBTAIN
$: SOME RANDOM DIGITS.  THE METHOD USED IN PATCH/MERGE IS ADOPTED HERE, NAMELY
$: STARTING WITH THE PREFIX (MFID) "PASC001", A SEARCH IS PREFORMED TO DETERMINE
$: WHETHER SUCH A FILE NAME IS ALREADY CATALOGUED.  IF SO, 1 IS ADDED AND THE
$: SEARCH REPEATED. IN ADDITION, THE FILE IS CREATED WITH A SAVE FACTOR
$: (RETENTION PERIOD) OF ZERO DAYS SO THAT A HALT-LOAD WILL REMOVE THE FILE
$: AUTOMATICALLY.
$: SEE PATCH 704.
$:  NILS A OTTE,   UNIVERSITY OF NATAL, DURBAN.    AUG - NOV 1977.
$:
PROCEDURE  SEARCHDISKDIRECTORY( F, A );  FILE F;  ARRAY A[0];           20222100
           SEARCH( F, A[*] );   % END OF SEARCHDISKDIRECTORY;           20222200
                                                                        20222300
    CHARPNT := POINTER(CH[0])+7;  CH[0] := " ";                         20322000
CH[0] := "PASC000";  CHARPNT := POINTER(CH[0])+5;                       90016000
PASCALGOL.FID := USER := TIME(-1);                                      90017000
DO BEGIN   C:=C+1;  REPLACE CHARPNT BY C FOR 3 DIGITS;                  90018000
   PASCALGOL.MFID := ALGOLNAME := CH[0];                                90019000
   SEARCHDISKDIRECTORY( PASCALGOL, LINES[*] );                          90020000
END UNTIL LINES[0]=-1; % FILE NOT ON DISK                               90021000
$# PATCH 712 FOR PASCAL.XVI.O CONTAINS 2 CARDS.  MARK PROCEDURE LEVELS IN MARGIN
$: PATCH TO MARK THE START AND END OF PROCEDURES AND FUNCTIONS BY ANNOTATING THE
$: MARGIN WITH THE SYMBOLS "+P" & "-P" FOLLOWED BY THE LEVEL NUMBER.
$:  NILS A OTTE,   UNIVERSITY OF NATAL, DURBAN.    AUG - NOV 1977.
$:
    MARGIN("+P",CURLEVEL);    % MARK PROCEDURE LEVEL                    80420100
    MARGIN("-P",CURLEVEL);    % MARK END OF PROCEDURE                   80702100
$# PATCH 713 FOR PASCAL.XVI.O CONTAINS 14 CARDS.CORRECTS ERROR MESSAGE ETC.
$:   CORRECTS THE DOUBLE "NO ERROS" MESSAGE AND THE OUTPUT OF HEADINGS
$:   WHEN L1 IS SET AFTER L-.
$:   ALSO CORRECTS THE SCANNING PROBLEM WHEN COMPILER OPTIONS ARE INCORRECT.
$:   DAVID A COOPER, HERIOT-WATT UNIVERISTY ...... AUGUST 1978
$:
       ERROR102MESS(//"102  *** WARNING ONLY, ILLEGAL COMPILER OPTION.")10188750
       , %                                                              10188751
    IF ERRNUM=100 OR ERRNUM=102                                         20181600
    THEN NUMERRS := NUMERRS - 1; %*ERROR NUMBER 102 IS ONLY AN ILLEGAL  20181610
%                               * DOLLAR OPTION WARNING &               20181620
%                               *ERROR NUMBER 100 ALONE SHOULD NOT      20181650
                               ELSE LISTOPTION := C="+" ELSE            30265000
             END                                                        30280800
             ELSE ERROR(102);                                           30280810
     IF ERR(102) THEN                                                   90090710
          WRITE(LINE,ERROR102MESS);                                     90090720
$                                                                       90110000
$                                                                       90111000
    ("102   ***WARNING ONLY, ILLEGAL DOLLAR OPTION."),                  91106900
$# PATCH 800 FOR PASCAL.XVI.O.CONTAINS 10 CARDS.
$: TO REMOVE CONFLICTS BETWEEN HERIOT-WATT & NATAL EXISTING PATCHES.
$:
       MAXSYMS    = 800#,    %MAX NUMBER OF SYMBOLS IN ONE EXPRESSION.  10052000
       MAXPNTRS   = 25#;     %MAX NUMBER OF UNDECLARED POINTERS(FORWD). 10056000
DEFINE ERR(ERR1) = BOOLEAN(0&ERRP[(ERR1).[6:2]][0:((ERR1).[4:5]):1])#;  10156108
INTEGER EXPRLEVEL, EXPINVARCNT; %                                       40018000
 INTEGER INDEX, CTYPE, NUMFORWARDS, TX, I; %                            80403000
INTEGER PROGNAMELENGTH; %                                               90013900
     IF ERR(100) %                                                      90090600
       "; ALGOL FILE TAPE=PASCRUN/DISK SERIAL; ALGOL FILE CARD=",       90119000
       P(PALGOLNAME),"/",P(PUSER)," SERIAL;", %                         90120000
       " XALGOL STACK = 2048; END."; %                                  90120500
$# PATCH 998 FOR PASCAL.XVI.O CONTAINS 10 CARDS.  INSERT PAGE THROWS AT DESIRED
$: PATCH TO INSERT PAGE THROWS AT DESIRED POINTES IN THE SOURCE TO PRODUCE A
$: NICELY LAID OUT LISTING.
$:
$                                                           PAGE        19000000
$                                                           PAGE        20290000
$                                                           PAGE        29000000
$                                                           PAGE        39000000
$                                                           PAGE        49000000
$                                                           PAGE        59000000
$                                                           PAGE        69000000
$                                                           PAGE        79000000
$                                                           PAGE        89000000
$                                                           PAGE        90070999
$:  NILS A OTTE,   UNIVERSITY OF NATAL, DURBAN.    AUG - NOV 1977.
$:
$# PATCH 999 FOR PASCAL.XVI.O CONTAINS 1 CARDS.  VERISON NUMBER.
$:
DEFINE EDITION = "4.4"#;%AUGUST   1978...DAVID A COOPER...              10028000

?END
